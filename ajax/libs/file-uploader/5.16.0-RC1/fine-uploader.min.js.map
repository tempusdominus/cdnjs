{"version":3,"sources":["?","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/traditional/traditional.form.upload.handler.js","../client/js/traditional/traditional.xhr.upload.handler.js","../client/js/traditional/all-chunks-done.ajax.requester.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js"],"names":["global","qq","element","hide","style","display","this","attach","type","fn","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","name","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","each","idx","val","push","getFirstByClass","children","child","firstChild","nodeType","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","exec","getAttribute","undefined","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","data","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","length","Uint8Array","character","charCodeAt","log","message","level","console","isObject","variable","Object","prototype","toString","call","isFunction","isArray","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","args","Array","slice","arguments","newStr","nextIdxToReplace","substring","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","toLowerCase","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","error","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","prop","override","target","sourceFn","super_","source","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","retVal","Storage","key","getItem","charAt","bind","oldFunc","context","newArgs","concat","apply","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome14OrHigher","match","isCrossOriginXhrSupported","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","options","title","self","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","index","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onBeforeStatusChange","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","params","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","_options","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","isResumable","hasResumeRecord","debug","pauseUpload","removeFileRef","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","_customResumeDataStore","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setCustomResumeData","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","callbacks","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","toUpperCase","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","namespace","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","xhr","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadResult","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkResult","partIndex","onUploadChunkSuccess","onResume","customResumeData","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","isInProgress","getCustomResumeData","_getCustomResumeData","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","warnBeforeUnload","filenameParam","forceMultipart","omitDefaultParams","paramsInBody","requireSuccessJson","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","jsonPayload","resetOnStatus","recordsExpireIn","resuming","customKeys","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","normalizedResponse","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","requestOverrides","uploadChunkData","overrides","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","traditional","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","_getLocalStorageId","isAttemptingResume","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","getChunkSize","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","chunkingState","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","localStorageId","forEach","_getMimeType","_getPersistableData","ceil","_markNotResumable","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","el","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","getIframeContentJson","doc","innerHtml","contentWindow","nodeValue","createForm","responseFromMessage","multipart","addChunkingSpecificParams","allChunksDoneRequester","AllChunksDoneAjaxRequester","createReadyStateChangedHandler","onUploadOrChunkComplete","getChunksCompleteParams","isErrorUploadResponse","parseResponse","sendChunksCompleteRequest","complete","setParamsAndGetEntityToSend","entityToSendParams","xhrOverrides","customParams","defaultParams","xhrOverrideParams","setUploadHeaders","headersOptions","headerOverrides","headerName","headerValue","extraHeaders","uploadChunkParams","toSend","promises","endpointHandler","DragAndDrop","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","y","setupDragDrop","dropZones","dropZoneElements","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","includes","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","relatedTarget","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","placeholders","waitUntilResponse","FineUploader","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateDom","showThumbnails","serverScale","fileBatch","content","createDocumentFragment","map","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","uploader","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","update","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListEl","defaultButton","dropTextEl","uploaderEl","cloneNode","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":"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","file":"fine-uploader.min.js","sourcesContent":[null,"/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\nqq.version = \"5.16.0-RC1\";\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    // adapted from https://stackoverflow.com/a/23278460/486979\n    supportsFolderDrop = supportsFileDrop && (function() {\n        var input = document.createElement(\"input\");\n\n        input.type = \"file\";\n        return !!(\"webkitdirectory\" in (input || document.querySelectorAll(\"input[type=file]\")[0]));\n    }());\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         * - onBeforeStatusChange(fileId): callback that is executed before the status change is broadcast\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            spec.onBeforeStatusChange && spec.onBeforeStatusChange(id);\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n","/*globals qq*/\n/**\n * Defines the public API for FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.basePublicApi = {\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\n        addBlobs: function(blobDataOrArray, params, endpoint) {\n            this.addFiles(blobDataOrArray, params, endpoint);\n        },\n\n        addInitialFiles: function(cannedFileList) {\n            var self = this;\n\n            qq.each(cannedFileList, function(index, cannedFile) {\n                self._addCannedFile(cannedFile);\n            });\n        },\n\n        addFiles: function(data, params, endpoint) {\n            this._maybeHandleIos8SafariWorkaround();\n\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\n\n                processBlob = qq.bind(function(blob) {\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processBlobData = qq.bind(function(blobData) {\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\n                }, this),\n\n                processCanvas = qq.bind(function(canvas) {\n                    var blob = qq.canvasToBlob(canvas);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName + \".png\"\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processCanvasData = qq.bind(function(canvasData) {\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: canvasData.name\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processFileOrInput = qq.bind(function(fileOrInput) {\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\n                        var files = Array.prototype.slice.call(fileOrInput.files),\n                            self = this;\n\n                        qq.each(files, function(idx, file) {\n                            self._handleNewFile(file, batchId, verifiedFiles);\n                        });\n                    }\n                    else {\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\n                    }\n                }, this),\n\n                normalizeData = function() {\n                    if (qq.isFileList(data)) {\n                        data = Array.prototype.slice.call(data);\n                    }\n                    data = [].concat(data);\n                },\n\n                self = this,\n                verifiedFiles = [];\n\n            this._currentBatchId = batchId;\n\n            if (data) {\n                normalizeData();\n\n                qq.each(data, function(idx, fileContainer) {\n                    if (qq.isFileOrInput(fileContainer)) {\n                        processFileOrInput(fileContainer);\n                    }\n                    else if (qq.isBlob(fileContainer)) {\n                        processBlob(fileContainer);\n                    }\n                    else if (qq.isObject(fileContainer)) {\n                        if (fileContainer.blob && fileContainer.name) {\n                            processBlobData(fileContainer);\n                        }\n                        else if (fileContainer.canvas && fileContainer.name) {\n                            processCanvasData(fileContainer);\n                        }\n                    }\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\n                        processCanvas(fileContainer);\n                    }\n                    else {\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\n                    }\n                });\n\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\n            }\n        },\n\n        cancel: function(id) {\n            this._handler.cancel(id);\n        },\n\n        cancelAll: function() {\n            var storedIdsCopy = [],\n                self = this;\n\n            qq.extend(storedIdsCopy, this._storedIds);\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\n                self.cancel(storedFileId);\n            });\n\n            this._handler.cancelAll();\n        },\n\n        clearStoredFiles: function() {\n            this._storedIds = [];\n        },\n\n        continueUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            if (uploadData.status === qq.status.PAUSED) {\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\n                this._uploadFile(id);\n                return true;\n            }\n            else {\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        deleteFile: function(id) {\n            return this._onSubmitDelete(id);\n        },\n\n        // TODO document?\n        doesExist: function(fileOrBlobId) {\n            return this._handler.isValid(fileOrBlobId);\n        },\n\n        // Generate a variable size thumbnail on an img or canvas,\n        // returning a promise that is fulfilled when the attempt completes.\n        // Thumbnail can either be based off of a URL for an image returned\n        // by the server in the upload response, or the associated `Blob`.\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\n            var promiseToReturn = new qq.Promise(),\n                fileOrUrl, options;\n\n            if (this._imageGenerator) {\n                fileOrUrl = this._thumbnailUrls[fileId];\n                options = {\n                    customResizeFunction: customResizeFunction,\n                    maxSize: maxSize > 0 ? maxSize : null,\n                    scale: maxSize > 0\n                };\n\n                // If client-side preview generation is possible\n                // and we are not specifically looking for the image URl returned by the server...\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\n                    fileOrUrl = this.getFile(fileId);\n                }\n\n                /* jshint eqeqeq:false,eqnull:true */\n                if (fileOrUrl == null) {\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\n                }\n                else {\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\n                        function success(modifiedContainer) {\n                            promiseToReturn.success(modifiedContainer);\n                        },\n\n                        function failure(container, reason) {\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\n                        }\n                    );\n                }\n            }\n            else {\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\n            }\n\n            return promiseToReturn;\n        },\n\n        getButton: function(fileId) {\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\n        },\n\n        getEndpoint: function(fileId) {\n            return this._endpointStore.get(fileId);\n        },\n\n        getFile: function(fileOrBlobId) {\n            return this._handler.getFile(fileOrBlobId) || null;\n        },\n\n        getInProgress: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED\n                ]\n            }).length;\n        },\n\n        getName: function(id) {\n            return this._uploadData.retrieve({id: id}).name;\n        },\n\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\n        getParentId: function(id) {\n            var uploadDataEntry = this.getUploads({id: id}),\n                parentId = null;\n\n            if (uploadDataEntry) {\n                if (uploadDataEntry.parentId !== undefined) {\n                    parentId = uploadDataEntry.parentId;\n                }\n            }\n\n            return parentId;\n        },\n\n        getResumableFilesData: function() {\n            return this._handler.getResumableFilesData();\n        },\n\n        getSize: function(id) {\n            return this._uploadData.retrieve({id: id}).size;\n        },\n\n        getNetUploads: function() {\n            return this._netUploaded;\n        },\n\n        getRemainingAllowedItems: function() {\n            var allowedItems = this._currentItemLimit;\n\n            if (allowedItems > 0) {\n                return allowedItems - this._netUploadedOrQueued;\n            }\n\n            return null;\n        },\n\n        getUploads: function(optionalFilter) {\n            return this._uploadData.retrieve(optionalFilter);\n        },\n\n        getUuid: function(id) {\n            return this._uploadData.retrieve({id: id}).uuid;\n        },\n\n        isResumable: function(id) {\n            return this._handler.hasResumeRecord(id);\n        },\n\n        log: function(str, level) {\n            if (this._options.debug && (!level || level === \"info\")) {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\n            }\n            else if (level && level !== \"info\") {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\n\n            }\n        },\n\n        pauseUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            // Pause only really makes sense if the file is uploading or retrying\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\n                if (this._handler.pause(id)) {\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\n                    return true;\n                }\n                else {\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\n                }\n            }\n            else {\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        removeFileRef: function(id) {\n            this._handler.expunge(id);\n        },\n\n        reset: function() {\n            this.log(\"Resetting uploader...\");\n\n            this._handler.reset();\n            this._storedIds = [];\n            this._autoRetries = [];\n            this._retryTimeouts = [];\n            this._preventRetries = [];\n            this._thumbnailUrls = [];\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n\n            this._paramsStore.reset();\n            this._endpointStore.reset();\n            this._netUploadedOrQueued = 0;\n            this._netUploaded = 0;\n            this._uploadData.reset();\n            this._buttonIdsForFileIds = [];\n\n            this._pasteHandler && this._pasteHandler.reset();\n            this._options.session.refreshOnReset && this._refreshSessionData();\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n\n            this._totalProgress && this._totalProgress.reset();\n\n            this._customResumeDataStore.reset();\n        },\n\n        retry: function(id) {\n            return this._manualRetry(id);\n        },\n\n        scaleImage: function(id, specs) {\n            var self = this;\n\n            return qq.Scaler.prototype.scaleImage(id, specs, {\n                log: qq.bind(self.log, self),\n                getFile: qq.bind(self.getFile, self),\n                uploadData: self._uploadData\n            });\n        },\n\n        setCustomHeaders: function(headers, id) {\n            this._customHeadersStore.set(headers, id);\n        },\n\n        setCustomResumeData: function(id, data) {\n            this._customResumeDataStore.set(data, id);\n        },\n\n        setDeleteFileCustomHeaders: function(headers, id) {\n            this._deleteFileCustomHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileEndpoint: function(endpoint, id) {\n            this._deleteFileEndpointStore.set(endpoint, id);\n        },\n\n        setDeleteFileParams: function(params, id) {\n            this._deleteFileParamsStore.set(params, id);\n        },\n\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\n        setEndpoint: function(endpoint, id) {\n            this._endpointStore.set(endpoint, id);\n        },\n\n        setForm: function(elementOrId) {\n            this._updateFormSupportAndParams(elementOrId);\n        },\n\n        setItemLimit: function(newItemLimit) {\n            this._currentItemLimit = newItemLimit;\n        },\n\n        setName: function(id, newName) {\n            this._uploadData.updateName(id, newName);\n        },\n\n        setParams: function(params, id) {\n            this._paramsStore.set(params, id);\n        },\n\n        setUuid: function(id, newUuid) {\n            return this._uploadData.uuidChanged(id, newUuid);\n        },\n\n        /**\n         * Expose the internal status of a file id to the public api for manual state changes\n         * @public\n         *\n         * @param {Number} id,\n         * @param {String} newStatus\n         *\n         * @todo Implement the remaining methods\n         */\n        setStatus: function(id, newStatus) {\n            var fileRecord = this.getUploads({id: id});\n            if (!fileRecord) {\n                throw new qq.Error(id + \" is not a valid file ID.\");\n            }\n\n            switch (newStatus) {\n                case qq.status.DELETED:\n                    this._onDeleteComplete(id, null, false);\n                    break;\n                case qq.status.DELETE_FAILED:\n                    this._onDeleteComplete(id, null, true);\n                    break;\n                default:\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\n                    this.log(errorMessage);\n                    throw new qq.Error(errorMessage);\n            }\n        },\n\n        uploadStoredFiles: function() {\n            if (this._storedIds.length === 0) {\n                this._itemError(\"noFilesError\");\n            }\n            else {\n                this._uploadStoredFiles();\n            }\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploaderBasic mode.\n     */\n    qq.basePrivateApi = {\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\n        _addCannedFile: function(sessionData) {\n            var self = this;\n\n            return this._uploadData.addFile({\n                uuid: sessionData.uuid,\n                name: sessionData.name,\n                size: sessionData.size,\n                status: qq.status.UPLOAD_SUCCESSFUL,\n                onBeforeStatusChange: function(id) {\n                    sessionData.deleteFileEndpoint && self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\n                    sessionData.deleteFileParams && self.setDeleteFileParams(sessionData.deleteFileParams, id);\n\n                    if (sessionData.thumbnailUrl) {\n                        self._thumbnailUrls[id] = sessionData.thumbnailUrl;\n                    }\n\n                    self._netUploaded++;\n                    self._netUploadedOrQueued++;\n                }\n            });\n        },\n\n        _annotateWithButtonId: function(file, associatedInput) {\n            if (qq.isFile(file)) {\n                file.qqButtonId = this._getButtonId(associatedInput);\n            }\n        },\n\n        _batchError: function(message) {\n            this._options.callbacks.onError(null, null, message, undefined);\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return new qq.DeleteFileAjaxRequester({\n                method: this._options.deleteFile.method.toUpperCase(),\n                maxConnections: this._options.maxConnections,\n                uuidParamName: this._options.request.uuidName,\n                customHeaders: this._deleteFileCustomHeadersStore,\n                paramsStore: this._deleteFileParamsStore,\n                endpointStore: this._deleteFileEndpointStore,\n                cors: this._options.cors,\n                log: qq.bind(self.log, self),\n                onDelete: function(id) {\n                    self._onDelete(id);\n                    self._options.callbacks.onDelete(id);\n                },\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                }\n\n            });\n        },\n\n        _createPasteHandler: function() {\n            var self = this;\n\n            return new qq.PasteSupport({\n                targetElement: this._options.paste.targetElement,\n                callbacks: {\n                    log: qq.bind(self.log, self),\n                    pasteReceived: function(blob) {\n                        self._handleCheckedCallback({\n                            name: \"onPasteReceived\",\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\n                            identifier: \"pasted image\"\n                        });\n                    }\n                }\n            });\n        },\n\n        _createStore: function(initialValue, _readOnlyValues_) {\n            var store = {},\n                catchall = initialValue,\n                perIdReadOnlyValues = {},\n                readOnlyValues = _readOnlyValues_,\n                copy = function(orig) {\n                    if (qq.isObject(orig)) {\n                        return qq.extend({}, orig);\n                    }\n                    return orig;\n                },\n                getReadOnlyValues = function() {\n                    if (qq.isFunction(readOnlyValues)) {\n                        return readOnlyValues();\n                    }\n                    return readOnlyValues;\n                },\n                includeReadOnlyValues = function(id, existing) {\n                    if (readOnlyValues && qq.isObject(existing)) {\n                        qq.extend(existing, getReadOnlyValues());\n                    }\n\n                    if (perIdReadOnlyValues[id]) {\n                        qq.extend(existing, perIdReadOnlyValues[id]);\n                    }\n                };\n\n            return {\n                set: function(val, id) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id == null) {\n                        store = {};\n                        catchall = copy(val);\n                    }\n                    else {\n                        store[id] = copy(val);\n                    }\n                },\n\n                get: function(id) {\n                    var values;\n\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id != null && store[id]) {\n                        values = store[id];\n                    }\n                    else {\n                        values = copy(catchall);\n                    }\n\n                    includeReadOnlyValues(id, values);\n\n                    return copy(values);\n                },\n\n                addReadOnly: function(id, values) {\n                    // Only applicable to Object stores\n                    if (qq.isObject(store)) {\n                        // If null ID, apply readonly values to all files\n                        if (id === null) {\n                            if (qq.isFunction(values)) {\n                                readOnlyValues = values;\n                            }\n                            else {\n                                readOnlyValues = readOnlyValues || {};\n                                qq.extend(readOnlyValues, values);\n                            }\n                        }\n                        else {\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\n                            qq.extend(perIdReadOnlyValues[id], values);\n                        }\n                    }\n                },\n\n                remove: function(fileId) {\n                    return delete store[fileId];\n                },\n\n                reset: function() {\n                    store = {};\n                    perIdReadOnlyValues = {};\n                    catchall = initialValue;\n                }\n            };\n        },\n\n        _createUploadDataTracker: function() {\n            var self = this;\n\n            return new qq.UploadData({\n                getName: function(id) {\n                    return self.getName(id);\n                },\n                getUuid: function(id) {\n                    return self.getUuid(id);\n                },\n                getSize: function(id) {\n                    return self.getSize(id);\n                },\n                onStatusChange: function(id, oldStatus, newStatus) {\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\n                    self._maybeAllComplete(id, newStatus);\n\n                    if (self._totalProgress) {\n                        setTimeout(function() {\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\n                        }, 0);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Generate a tracked upload button.\n         *\n         * @param spec Object containing a required `element` property\n         * along with optional `multiple`, `accept`, and `folders`.\n         * @returns {qq.UploadButton}\n         * @private\n         */\n        _createUploadButton: function(spec) {\n            var self = this,\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\n                button;\n\n            function allowMultiple() {\n                if (qq.supportedFeatures.ajaxUploading) {\n                    // Workaround for bug in iOS7+ (see #1039)\n                    if (self._options.workarounds.iosEmptyVideos &&\n                        qq.ios() &&\n                        !qq.ios6() &&\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\n\n                        return false;\n                    }\n\n                    if (spec.multiple === undefined) {\n                        return self._options.multiple;\n                    }\n\n                    return spec.multiple;\n                }\n\n                return false;\n            }\n\n            button = new qq.UploadButton({\n                acceptFiles: acceptFiles,\n                element: spec.element,\n                focusClass: this._options.classes.buttonFocus,\n                folders: spec.folders,\n                hoverClass: this._options.classes.buttonHover,\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\n                multiple: allowMultiple(),\n                name: this._options.request.inputName,\n                onChange: function(input) {\n                    self._onInputChange(input);\n                },\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\n            });\n\n            this._disposeSupport.addDisposer(function() {\n                button.dispose();\n            });\n\n            self._buttons.push(button);\n\n            return button;\n        },\n\n        _createUploadHandler: function(additionalOptions, namespace) {\n            var self = this,\n                lastOnProgress = {},\n                options = {\n                    debug: this._options.debug,\n                    maxConnections: this._options.maxConnections,\n                    cors: this._options.cors,\n                    paramsStore: this._paramsStore,\n                    endpointStore: this._endpointStore,\n                    chunking: this._options.chunking,\n                    resume: this._options.resume,\n                    blobs: this._options.blobs,\n                    log: qq.bind(self.log, self),\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\n                    onProgress: function(id, name, loaded, total) {\n                        if (loaded < 0 || total < 0) {\n                            return;\n                        }\n\n                        if (lastOnProgress[id]) {\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\n                                self._onProgress(id, name, loaded, total);\n                                self._options.callbacks.onProgress(id, name, loaded, total);\n                            }\n                        }\n                        else {\n                            self._onProgress(id, name, loaded, total);\n                            self._options.callbacks.onProgress(id, name, loaded, total);\n                        }\n\n                        lastOnProgress[id] = {loaded: loaded, total: total};\n\n                    },\n                    onComplete: function(id, name, result, xhr) {\n                        delete lastOnProgress[id];\n\n                        var status = self.getUploads({id: id}).status,\n                            retVal;\n\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\n                        // invoked by the browser multiple times for the same XHR instance with the same state\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\n                        // done this.\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\n                            return;\n                        }\n\n                        retVal = self._onComplete(id, name, result, xhr);\n\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\n                        // until the promise has been fulfilled.\n                        if (retVal instanceof  qq.Promise) {\n                            retVal.done(function() {\n                                self._options.callbacks.onComplete(id, name, result, xhr);\n                            });\n                        }\n                        else {\n                            self._options.callbacks.onComplete(id, name, result, xhr);\n                        }\n                    },\n                    onCancel: function(id, name, cancelFinalizationEffort) {\n                        var promise = new qq.Promise();\n\n                        self._handleCheckedCallback({\n                            name: \"onCancel\",\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\n                            onFailure: promise.failure,\n                            onSuccess: function() {\n                                cancelFinalizationEffort.then(function() {\n                                    self._onCancel(id, name);\n                                });\n\n                                promise.success();\n                            },\n                            identifier: id\n                        });\n\n                        return promise;\n                    },\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\n                    onUpload: function(id, name) {\n                        self._onUpload(id, name);\n                        var onUploadResult = self._options.callbacks.onUpload(id, name);\n\n                        if (qq.isGenericPromise(onUploadResult)) {\n                            self.log(qq.format(\"onUpload for {} returned a Promise - waiting for resolution.\", id));\n                            return onUploadResult;\n                        }\n\n                        return new qq.Promise().success();\n                    },\n                    onUploadChunk: function(id, name, chunkData) {\n                        self._onUploadChunk(id, chunkData);\n                        var onUploadChunkResult = self._options.callbacks.onUploadChunk(id, name, chunkData);\n\n                        if (qq.isGenericPromise(onUploadChunkResult)) {\n                            self.log(qq.format(\"onUploadChunk for {}.{} returned a Promise - waiting for resolution.\", id, chunkData.partIndex));\n                            return onUploadChunkResult;\n                        }\n\n                        return new qq.Promise().success();\n                    },\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\n                    },\n                    onResume: function(id, name, chunkData, customResumeData) {\n                        return self._options.callbacks.onResume(id, name, chunkData, customResumeData);\n                    },\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\n                        return self._onAutoRetry.apply(self, arguments);\n                    },\n                    onUuidChanged: function(id, newUuid) {\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\n                        self.setUuid(id, newUuid);\n                    },\n                    getName: qq.bind(self.getName, self),\n                    getUuid: qq.bind(self.getUuid, self),\n                    getSize: qq.bind(self.getSize, self),\n                    setSize: qq.bind(self._setSize, self),\n                    getDataByUuid: function(uuid) {\n                        return self.getUploads({uuid: uuid});\n                    },\n                    isQueued: function(id) {\n                        var status = self.getUploads({id: id}).status;\n                        return status === qq.status.QUEUED ||\n                            status === qq.status.SUBMITTED ||\n                            status === qq.status.UPLOAD_RETRYING ||\n                            status === qq.status.PAUSED;\n                    },\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\n                    getIdsInBatch: self._uploadData.getIdsInBatch,\n                    isInProgress: function(id) {\n                        return self.getUploads({id: id}).status === qq.status.UPLOADING;\n                    },\n                    getCustomResumeData: qq.bind(self._getCustomResumeData, self),\n                    setStatus: function(id, status) {\n                        self._uploadData.setStatus(id, status);\n                    }\n                };\n\n            qq.each(this._options.request, function(prop, val) {\n                options[prop] = val;\n            });\n\n            options.customHeaders = this._customHeadersStore;\n\n            if (additionalOptions) {\n                qq.each(additionalOptions, function(key, val) {\n                    options[key] = val;\n                });\n            }\n\n            return new qq.UploadHandlerController(options, namespace);\n        },\n\n        _fileOrBlobRejected: function(id) {\n            this._netUploadedOrQueued--;\n            this._uploadData.setStatus(id, qq.status.REJECTED);\n        },\n\n        _formatSize: function(bytes) {\n            if (bytes === 0) {\n                return bytes + this._options.text.sizeSymbols[0];\n            }\n            var i = -1;\n            do {\n                bytes = bytes / 1000;\n                i++;\n            } while (bytes > 999);\n\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\n        },\n\n        // Creates an internal object that tracks various properties of each extra button,\n        // and then actually creates the extra button.\n        _generateExtraButtonSpecs: function() {\n            var self = this;\n\n            this._extraButtonSpecs = {};\n\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\n                var multiple = extraButtonOptionEntry.multiple,\n                    validation = qq.extend({}, self._options.validation, true),\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\n\n                if (multiple === undefined) {\n                    multiple = self._options.multiple;\n                }\n\n                if (extraButtonSpec.validation) {\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\n                }\n\n                qq.extend(extraButtonSpec, {\n                    multiple: multiple,\n                    validation: validation\n                }, true);\n\n                self._initExtraButton(extraButtonSpec);\n            });\n        },\n\n        _getButton: function(buttonId) {\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\n\n            if (extraButtonsSpec) {\n                return extraButtonsSpec.element;\n            }\n            else if (buttonId === this._defaultButtonId) {\n                return this._options.button;\n            }\n        },\n\n        /**\n         * Gets the internally used tracking ID for a button.\n         *\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\n         * @private\n         */\n        _getButtonId: function(buttonOrFileInputOrFile) {\n            var inputs, fileInput,\n                fileBlobOrInput = buttonOrFileInputOrFile;\n\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\n            }\n\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\n                if (qq.isFile(fileBlobOrInput)) {\n                    return fileBlobOrInput.qqButtonId;\n                }\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\n\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\n\n                qq.each(inputs, function(idx, input) {\n                    if (input.getAttribute(\"type\") === \"file\") {\n                        fileInput = input;\n                        return false;\n                    }\n                });\n\n                if (fileInput) {\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n            }\n        },\n\n        _getCustomResumeData: function(fileId) {\n            return this._customResumeDataStore.get(fileId);\n        },\n\n        _getNotFinished: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED,\n                    qq.status.SUBMITTING,\n                    qq.status.SUBMITTED,\n                    qq.status.PAUSED\n                ]\n            }).length;\n        },\n\n        // Get the validation options for this button.  Could be the default validation option\n        // or a specific one assigned to this particular button.\n        _getValidationBase: function(buttonId) {\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\n\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\n        },\n\n        _getValidationDescriptor: function(fileWrapper) {\n            if (fileWrapper.file instanceof qq.BlobProxy) {\n                return {\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\n                    size: fileWrapper.file.referenceBlob.size\n                };\n            }\n\n            return {\n                name: this.getUploads({id: fileWrapper.id}).name,\n                size: this.getUploads({id: fileWrapper.id}).size\n            };\n        },\n\n        _getValidationDescriptors: function(fileWrappers) {\n            var self = this,\n                fileDescriptors = [];\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\n            });\n\n            return fileDescriptors;\n        },\n\n        // Allows camera access on either the default or an extra button for iOS devices.\n        _handleCameraAccess: function() {\n            if (this._options.camera.ios && qq.ios()) {\n                var acceptIosCamera = \"image/*;capture=camera\",\n                    button = this._options.camera.button,\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\n                    optionRoot = this._options;\n\n                // If we are not targeting the default button, it is an \"extra\" button\n                if (buttonId && buttonId !== this._defaultButtonId) {\n                    optionRoot = this._extraButtonSpecs[buttonId];\n                }\n\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\n                optionRoot.multiple = false;\n\n                // update the options\n                if (optionRoot.validation.acceptFiles === null) {\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\n                }\n                else {\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\n                }\n\n                // update the already-created button\n                qq.each(this._buttons, function(idx, button) {\n                    if (button.getButtonId() === buttonId) {\n                        button.setMultiple(optionRoot.multiple);\n                        button.setAcceptFiles(optionRoot.acceptFiles);\n\n                        return false;\n                    }\n                });\n            }\n        },\n\n        _handleCheckedCallback: function(details) {\n            var self = this,\n                callbackRetVal = details.callback();\n\n            if (qq.isGenericPromise(callbackRetVal)) {\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\n                return callbackRetVal.then(\n                    function(successParam) {\n                        self.log(details.name + \" promise success for \" + details.identifier);\n                        details.onSuccess(successParam);\n                    },\n                    function() {\n                        if (details.onFailure) {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                            details.onFailure();\n                        }\n                        else {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                        }\n                    });\n            }\n\n            if (callbackRetVal !== false) {\n                details.onSuccess(callbackRetVal);\n            }\n            else {\n                if (details.onFailure) {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\n                    details.onFailure();\n                }\n                else {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\n                }\n            }\n\n            return callbackRetVal;\n        },\n\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\n            var self = this,\n                uuid = qq.getUniqueId(),\n                size = -1,\n                name = qq.getFilename(file),\n                actualFile = file.blob || file,\n                handler = this._customNewFileHandler ?\n                    this._customNewFileHandler :\n                    qq.bind(self._handleNewFileGeneric, self);\n\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\n                size = actualFile.size;\n            }\n\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\n                uploadData: self._uploadData,\n                paramsStore: self._paramsStore,\n                addFileToHandler: function(id, file) {\n                    self._handler.add(id, file);\n                    self._netUploadedOrQueued++;\n                    self._trackButton(id);\n                }\n            });\n        },\n\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\n            var self = this;\n            var id = this._uploadData.addFile({\n                uuid: uuid,\n                name: name,\n                size: size,\n                batchId: batchId,\n\n                onBeforeStatusChange: function(id) {\n                    self._handler.add(id, file);\n                }\n            });\n\n            this._trackButton(id);\n\n            this._netUploadedOrQueued++;\n\n            fileList.push({id: id, file: file});\n        },\n\n        _handlePasteSuccess: function(blob, extSuppliedName) {\n            var extension = blob.type.split(\"/\")[1],\n                name = extSuppliedName;\n\n            /*jshint eqeqeq: true, eqnull: true*/\n            if (name == null) {\n                name = this._options.paste.defaultName;\n            }\n\n            name += \".\" + extension;\n\n            this.addFiles({\n                name: name,\n                blob: blob\n            });\n        },\n\n        _handleDeleteSuccess: function(id) {\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\n                var name = this.getName(id);\n\n                this._netUploadedOrQueued--;\n                this._netUploaded--;\n                this._handler.expunge(id);\n                this._uploadData.setStatus(id, qq.status.DELETED);\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\n            }\n        },\n\n        _handleDeleteFailed: function(id, xhrOrXdr) {\n            var name = this.getName(id);\n\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\n\n            // Check first if xhrOrXdr is actually passed or valid\n            // For error reporting, we only have access to the response status if this is not\n            // an `XDomainRequest`.\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\n            }\n            else {\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\n            }\n        },\n\n        // Creates an extra button element\n        _initExtraButton: function(spec) {\n            var button = this._createUploadButton({\n                accept: spec.validation.acceptFiles,\n                allowedExtensions: spec.validation.allowedExtensions,\n                element: spec.element,\n                folders: spec.folders,\n                multiple: spec.multiple,\n                title: spec.fileInputTitle\n            });\n\n            this._extraButtonSpecs[button.getButtonId()] = spec;\n        },\n\n        _initFormSupportAndParams: function() {\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n            );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore = this._createStore(\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\n                );\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\n                }\n            }\n            else {\n                this._paramsStore = this._createStore(this._options.request.params);\n            }\n        },\n\n        _isDeletePossible: function() {\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\n                return false;\n            }\n\n            if (this._options.cors.expected) {\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\n                    return true;\n                }\n\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _isAllowedExtension: function(allowed, fileName) {\n            var valid = false;\n\n            if (!allowed.length) {\n                return true;\n            }\n\n            qq.each(allowed, function(idx, allowedExt) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExt)) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\n\n                    if (fileName.match(extRegex) != null) {\n                        valid = true;\n                        return false;\n                    }\n                }\n            });\n\n            return valid;\n        },\n\n        /**\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\n         *\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\n         * @param maybeNameOrNames names of the items that have failed, if applicable\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\n         * @private\n         */\n        _itemError: function(code, maybeNameOrNames, item) {\n            var message = this._options.messages[code],\n                allowedExtensions = [],\n                names = [].concat(maybeNameOrNames),\n                name = names[0],\n                buttonId = this._getButtonId(item),\n                validationBase = this._getValidationBase(buttonId),\n                extensionsForMessage, placeholderMatch;\n\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExtension)) {\n                    allowedExtensions.push(allowedExtension);\n                }\n            });\n\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\n\n            r(\"{file}\", this._options.formatFileName(name));\n            r(\"{extensions}\", extensionsForMessage);\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\n\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\n            if (placeholderMatch !== null) {\n                qq.each(placeholderMatch, function(idx, placeholder) {\n                    r(placeholder, names[idx]);\n                });\n            }\n\n            this._options.callbacks.onError(null, name, message, undefined);\n\n            return message;\n        },\n\n        /**\n         * Conditionally orders a manual retry of a failed upload.\n         *\n         * @param id File ID of the failed upload\n         * @param callback Optional callback to invoke if a retry is prudent.\n         * In lieu of asking the upload handler to retry.\n         * @returns {boolean} true if a manual retry will occur\n         * @private\n         */\n        _manualRetry: function(id, callback) {\n            if (this._onBeforeManualRetry(id)) {\n                this._netUploadedOrQueued++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n\n                if (callback) {\n                    callback(id);\n                }\n                else {\n                    this._handler.retry(id);\n                }\n\n                return true;\n            }\n        },\n\n        _maybeAllComplete: function(id, status) {\n            var self = this,\n                notFinished = this._getNotFinished();\n\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\n                this._succeededSinceLastAllComplete.push(id);\n            }\n            else if (status === qq.status.UPLOAD_FAILED) {\n                this._failedSinceLastAllComplete.push(id);\n            }\n\n            if (notFinished === 0 &&\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\n                setTimeout(function() {\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\n                }, 0);\n            }\n        },\n\n        _maybeHandleIos8SafariWorkaround: function() {\n            var self = this;\n\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n                setTimeout(function() {\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\n                }, 0);\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\n            }\n        },\n\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\n            // Assuming no one will actually set the response code to something other than 200\n            // and still set 'success' to true...\n            if (!response.success) {\n                if (xhr && xhr.status !== 200 && !response.error) {\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\n                }\n                else {\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\n                }\n            }\n        },\n\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\n            var self = this;\n\n            if (items.length > index) {\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\n                    setTimeout(function() {\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\n                            buttonId = self._getButtonId(items[index].file),\n                            button = self._getButton(buttonId);\n\n                        self._handleCheckedCallback({\n                            name: \"onValidate\",\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\n                        });\n                    }, 0);\n                }\n                else if (!validItem) {\n                    for (; index < items.length; index++) {\n                        self._fileOrBlobRejected(items[index].id);\n                    }\n                }\n            }\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\n\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n        },\n\n        /**\n         * Attempt to automatically retry a failed upload.\n         *\n         * @param id The file ID of the failed upload\n         * @param name The name of the file associated with the failed upload\n         * @param responseJSON Response from the server, parsed into a javascript object\n         * @param xhr Ajax transport used to send the failed request\n         * @param callback Optional callback to be invoked if a retry is prudent.\n         * Invoked in lieu of asking the upload handler to retry.\n         * @returns {boolean} true if an auto-retry will occur\n         * @private\n         */\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\n            var self = this;\n\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\n\n            if (self._shouldAutoRetry(id)) {\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\n\n                self._maybeParseAndSendUploadError.apply(self, arguments);\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\n                self._onBeforeAutoRetry(id, name);\n\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n                self._retryTimeouts[id] = setTimeout(function() {\n                    self.log(\"Starting retry for \" + name + \"...\");\n\n                    if (callback) {\n                        callback(id);\n                    }\n                    else {\n                        self._handler.retry(id);\n                    }\n                }, retryWaitPeriod);\n\n                return true;\n            }\n        },\n\n        _onBeforeAutoRetry: function(id, name) {\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            var itemLimit = this._currentItemLimit,\n                fileName;\n\n            if (this._preventRetries[id]) {\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\n                return false;\n            }\n            else if (this._handler.isValid(id)) {\n                fileName = this.getName(id);\n\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\n                    return false;\n                }\n\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\n                    this._itemError(\"retryFailTooManyItems\");\n                    return false;\n                }\n\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\n                return true;\n            }\n            else {\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\n                return false;\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._netUploadedOrQueued--;\n\n            clearTimeout(this._retryTimeouts[id]);\n\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\n                this._storedIds.splice(storedItemIndex, 1);\n            }\n\n            this._uploadData.setStatus(id, qq.status.CANCELED);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            if (!result.success) {\n                this._netUploadedOrQueued--;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\n\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\n                    this._preventRetries[id] = true;\n                }\n            }\n            else {\n                if (result.thumbnailUrl) {\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\n                }\n\n                this._netUploaded++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\n            }\n\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\n\n            return result.success ? true : false;\n        },\n\n        _onDelete: function(id) {\n            this._uploadData.setStatus(id, qq.status.DELETING);\n        },\n\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\n            var name = this.getName(id);\n\n            if (isError) {\n                this._handleDeleteFailed(id, xhrOrXdr);\n            }\n            else {\n                this._handleDeleteSuccess(id);\n            }\n        },\n\n        _onInputChange: function(input) {\n            var fileIndex;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\n                    this._annotateWithButtonId(input.files[fileIndex], input);\n                }\n\n                this.addFiles(input.files);\n            }\n            // Android 2.3.x will fire `onchange` even if no file has been selected\n            else if (input.value.length > 0) {\n                this.addFiles(input);\n            }\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n        },\n\n        _onProgress: function(id, name, loaded, total) {\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\n        },\n\n        _onSubmit: function(id, name) {\n            //nothing to do yet in core uploader\n        },\n\n        _onSubmitCallbackSuccess: function(id, name) {\n            this._onSubmit.apply(this, arguments);\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\n            this._onSubmitted.apply(this, arguments);\n\n            if (this._options.autoUpload) {\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n                this._uploadFile(id);\n            }\n            else {\n                this._storeForLater(id);\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n            }\n        },\n\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\n            var uuid = this.getUuid(id),\n                adjustedOnSuccessCallback;\n\n            if (onSuccessCallback) {\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\n            }\n\n            if (this._isDeletePossible()) {\n                this._handleCheckedCallback({\n                    name: \"onSubmitDelete\",\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\n                    onSuccess: adjustedOnSuccessCallback ||\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\n                    identifier: id\n                });\n                return true;\n            }\n            else {\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\n                return false;\n            }\n        },\n\n        _onSubmitted: function(id) {\n            //nothing to do in the base uploader\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._options.callbacks.onTotalProgress(loaded, total);\n        },\n\n        _onUploadPrep: function(id) {\n            // nothing to do in the core uploader for now\n        },\n\n        _onUpload: function(id, name) {\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            //nothing to do in the base uploader\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\n            if (newStatus === qq.status.PAUSED) {\n                clearTimeout(this._retryTimeouts[id]);\n            }\n        },\n\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\n            var self = this;\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                self._fileOrBlobRejected(fileWrapper.id);\n            });\n        },\n\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\n            var errorMessage,\n                itemLimit = this._currentItemLimit,\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\n\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\n                if (items.length > 0) {\n                    this._handleCheckedCallback({\n                        name: \"onValidate\",\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\n                    });\n                }\n                else {\n                    this._itemError(\"noFilesError\");\n                }\n            }\n            else {\n                this._onValidateBatchCallbackFailure(items);\n                errorMessage = this._options.messages.tooManyItemsError\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\n                this._batchError(errorMessage);\n            }\n        },\n\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\n            var nextIndex = index + 1;\n\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\n\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n        },\n\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\n            var self = this,\n                nextIndex = index + 1,\n                validationDescriptor = this._getValidationDescriptor(items[index]);\n\n            this._validateFileOrBlobData(items[index], validationDescriptor)\n                .then(\n                function() {\n                    self._upload(items[index].id, params, endpoint);\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\n                },\n                function() {\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n                }\n            );\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            if (items.length === 0) {\n                this._itemError(\"noFilesError\");\n                return;\n            }\n\n            var validationDescriptors = this._getValidationDescriptors(items),\n                buttonId = this._getButtonId(items[0].file),\n                button = this._getButton(buttonId);\n\n            this._handleCheckedCallback({\n                name: \"onValidateBatch\",\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\n                identifier: \"batch validation\"\n            });\n        },\n\n        _preventLeaveInProgress: function() {\n            var self = this;\n\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\n                if (self.getInProgress()) {\n                    e = e || window.event;\n                    // for ie, ff\n                    e.returnValue = self._options.messages.onLeave;\n                    // for webkit\n                    return self._options.messages.onLeave;\n                }\n            });\n        },\n\n        // Attempts to refresh session data only if the `qq.Session` module exists\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\n        // callback will be invoked once the refresh is complete.\n        _refreshSessionData: function() {\n            var self = this,\n                options = this._options.session;\n\n            /* jshint eqnull:true */\n            if (qq.Session && this._options.session.endpoint != null) {\n                if (!this._session) {\n                    qq.extend(options, {cors: this._options.cors});\n\n                    options.log = qq.bind(this.log, this);\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\n\n                    this._session = new qq.Session(options);\n                }\n\n                setTimeout(function() {\n                    self._session.refresh().then(function(response, xhrOrXdr) {\n                        self._sessionRequestComplete();\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\n\n                    }, function(response, xhrOrXdr) {\n\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\n                    });\n                }, 0);\n            }\n        },\n\n        _sessionRequestComplete: function() {},\n\n        _setSize: function(id, newSize) {\n            this._uploadData.updateSize(id, newSize);\n            this._totalProgress && this._totalProgress.onNewSize(id);\n        },\n\n        _shouldAutoRetry: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            /*jshint laxbreak: true */\n            if (!this._preventRetries[id]\n                && this._options.retry.enableAuto\n                && uploadData.status !== qq.status.PAUSED) {\n\n                if (this._autoRetries[id] === undefined) {\n                    this._autoRetries[id] = 0;\n                }\n\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\n                    this._autoRetries[id] += 1;\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _storeForLater: function(id) {\n            this._storedIds.push(id);\n        },\n\n        // Maps a file with the button that was used to select it.\n        _trackButton: function(id) {\n            var buttonId;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                buttonId = this._handler.getFile(id).qqButtonId;\n            }\n            else {\n                buttonId = this._getButtonId(this._handler.getInput(id));\n            }\n\n            if (buttonId) {\n                this._buttonIdsForFileIds[id] = buttonId;\n            }\n        },\n\n        _updateFormSupportAndParams: function(formElementOrId) {\n            this._options.form.element = formElementOrId;\n\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n                );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this.setEndpoint(this._formSupport.newEndpoint);\n                }\n            }\n        },\n\n        _upload: function(id, params, endpoint) {\n            var name = this.getName(id);\n\n            if (params) {\n                this.setParams(params, id);\n            }\n\n            if (endpoint) {\n                this.setEndpoint(endpoint, id);\n            }\n\n            this._handleCheckedCallback({\n                name: \"onSubmit\",\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\n                identifier: id\n            });\n        },\n\n        _uploadFile: function(id) {\n            if (!this._handler.upload(id)) {\n                this._uploadData.setStatus(id, qq.status.QUEUED);\n            }\n        },\n\n        _uploadStoredFiles: function() {\n            var idToUpload, stillSubmitting,\n                self = this;\n\n            while (this._storedIds.length) {\n                idToUpload = this._storedIds.shift();\n                this._uploadFile(idToUpload);\n            }\n\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\n            if (stillSubmitting) {\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\n                setTimeout(function() {\n                    self._uploadStoredFiles();\n                }, 1000);\n            }\n        },\n\n        /**\n         * Performs some internal validation checks on an item, defined in the `validation` option.\n         *\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\n         * @private\n         */\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\n            var self = this,\n                file = (function() {\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\n                        return fileWrapper.file.referenceBlob;\n                    }\n                    return fileWrapper.file;\n                }()),\n                name = validationDescriptor.name,\n                size = validationDescriptor.size,\n                buttonId = this._getButtonId(fileWrapper.file),\n                validationBase = this._getValidationBase(buttonId),\n                validityChecker = new qq.Promise();\n\n            validityChecker.then(\n                function() {},\n                function() {\n                    self._fileOrBlobRejected(fileWrapper.id, name);\n                });\n\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\n                this._itemError(\"typeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (!this._options.validation.allowEmpty && size === 0) {\n                this._itemError(\"emptyError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\n                this._itemError(\"sizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && size < validationBase.minSizeLimit) {\n                this._itemError(\"minSizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\n                    validityChecker.success,\n                    function(errorCode) {\n                        self._itemError(errorCode + \"ImageError\", name, file);\n                        validityChecker.failure();\n                    }\n                );\n            }\n            else {\n                validityChecker.success();\n            }\n\n            return validityChecker;\n        },\n\n        _wrapCallbacks: function() {\n            var self, safeCallback, prop;\n\n            self = this;\n\n            safeCallback = function(name, callback, args) {\n                var errorMsg;\n\n                try {\n                    return callback.apply(self, args);\n                }\n                catch (exception) {\n                    errorMsg = exception.message || exception.toString();\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\n                }\n            };\n\n            /* jshint forin: false, loopfunc: true */\n            for (prop in this._options.callbacks) {\n                (function() {\n                    var callbackName, callbackFunc;\n                    callbackName = prop;\n                    callbackFunc = self._options.callbacks[callbackName];\n                    self._options.callbacks[callbackName] = function() {\n                        return safeCallback(callbackName, callbackFunc, arguments);\n                    };\n                }());\n            }\n        }\n    };\n}());\n","/*globals qq*/\n(function() {\n    \"use strict\";\n\n    qq.FineUploaderBasic = function(o) {\n        var self = this;\n\n        // These options define FineUploaderBasic mode.\n        this._options = {\n            debug: false,\n            button: null,\n            multiple: true,\n            maxConnections: 3,\n            disableCancelForFormUploads: false,\n            autoUpload: true,\n            warnBeforeUnload: true,\n\n            request: {\n                customHeaders: {},\n                endpoint: \"/server/upload\",\n                filenameParam: \"qqfilename\",\n                forceMultipart: true,\n                inputName: \"qqfile\",\n                method: \"POST\",\n                omitDefaultParams: false,\n                params: {},\n                paramsInBody: true,\n                requireSuccessJson: true,\n                totalFileSizeName: \"qqtotalfilesize\",\n                uuidName: \"qquuid\"\n            },\n\n            validation: {\n                allowedExtensions: [],\n                sizeLimit: 0,\n                minSizeLimit: 0,\n                itemLimit: 0,\n                stopOnFirstInvalidFile: true,\n                acceptFiles: null,\n                image: {\n                    maxHeight: 0,\n                    maxWidth: 0,\n                    minHeight: 0,\n                    minWidth: 0\n                },\n                allowEmpty: false\n            },\n\n            callbacks: {\n                onSubmit: function(id, name) {},\n                onSubmitted: function(id, name) {},\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\n                onAllComplete: function(successful, failed) {},\n                onCancel: function(id, name) {},\n                onUpload: function(id, name) {},\n                onUploadChunk: function(id, name, chunkData) {},\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\n                onResume: function(id, fileName, chunkData, customResumeData) {},\n                onProgress: function(id, name, loaded, total) {},\n                onTotalProgress: function(loaded, total) {},\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\n                onAutoRetry: function(id, name, attemptNumber) {},\n                onManualRetry: function(id, name) {},\n                onValidateBatch: function(fileOrBlobData) {},\n                onValidate: function(fileOrBlobData) {},\n                onSubmitDelete: function(id) {},\n                onDelete: function(id) {},\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\n                onPasteReceived: function(blob) {},\n                onStatusChange: function(id, oldStatus, newStatus) {},\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\n            },\n\n            messages: {\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n                emptyError: \"{file} is empty, please select files again without it.\",\n                noFilesError: \"No files to upload.\",\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\n                maxHeightImageError: \"Image is too tall.\",\n                maxWidthImageError: \"Image is too wide.\",\n                minHeightImageError: \"Image is not tall enough.\",\n                minWidthImageError: \"Image is not wide enough.\",\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\n            },\n\n            retry: {\n                enableAuto: false,\n                maxAutoAttempts: 3,\n                autoAttemptDelay: 5,\n                preventRetryResponseProperty: \"preventRetry\"\n            },\n\n            classes: {\n                buttonHover: \"qq-upload-button-hover\",\n                buttonFocus: \"qq-upload-button-focus\"\n            },\n\n            chunking: {\n                enabled: false,\n                concurrent: {\n                    enabled: false\n                },\n                mandatory: false,\n                paramNames: {\n                    partIndex: \"qqpartindex\",\n                    partByteOffset: \"qqpartbyteoffset\",\n                    chunkSize: \"qqchunksize\",\n                    totalFileSize: \"qqtotalfilesize\",\n                    totalParts: \"qqtotalparts\"\n                },\n                partSize: function(id) {\n                    return 2000000;\n                },\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\n                success: {\n                    endpoint: null,\n\n                    headers: function(id) {\n                        return null;\n                    },\n\n                    jsonPayload: false,\n\n                    method: \"POST\",\n\n                    params: function(id) {\n                        return null;\n                    },\n\n                    resetOnStatus: []\n                }\n            },\n\n            resume: {\n                enabled: false,\n                recordsExpireIn: 7, //days\n                paramNames: {\n                    resuming: \"qqresume\"\n                },\n                customKeys: function(fileId) {\n                    return [];\n                }\n            },\n\n            formatFileName: function(fileOrBlobName) {\n                return fileOrBlobName;\n            },\n\n            text: {\n                defaultResponseError: \"Upload failure reason unknown\",\n                fileInputTitle: \"file input\",\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\n            },\n\n            deleteFile: {\n                enabled: false,\n                method: \"DELETE\",\n                endpoint: \"/server/upload\",\n                customHeaders: {},\n                params: {}\n            },\n\n            cors: {\n                expected: false,\n                sendCredentials: false,\n                allowXdr: false\n            },\n\n            blobs: {\n                defaultName: \"misc_data\"\n            },\n\n            paste: {\n                targetElement: null,\n                defaultName: \"pasted_image\"\n            },\n\n            camera: {\n                ios: false,\n\n                // if ios is true: button is null means target the default button, otherwise target the button specified\n                button: null\n            },\n\n            // This refers to additional upload buttons to be handled by Fine Uploader.\n            // Each element is an object, containing `element` as the only required\n            // property.  The `element` must be a container that will ultimately\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\n            // Optional properties of each object include `multiple`, `validation`,\n            // and `folders`.\n            extraButtons: [],\n\n            // Depends on the session module.  Used to query the server for an initial file list\n            // during initialization and optionally after a `reset`.\n            session: {\n                endpoint: null,\n                params: {},\n                customHeaders: {},\n                refreshOnReset: true\n            },\n\n            // Send parameters associated with an existing form along with the files\n            form: {\n                // Element ID, HTMLElement, or null\n                element: \"qq-form\",\n\n                // Overrides the base `autoUpload`, unless `element` is null.\n                autoUpload: false,\n\n                // true = upload files on form submission (and squelch submit event)\n                interceptSubmit: true\n            },\n\n            // scale images client side, upload a new file for each scaled version\n            scaling: {\n                customResizer: null,\n\n                // send the original file as well\n                sendOriginal: true,\n\n                // fox orientation for scaled images\n                orient: true,\n\n                // If null, scaled image type will match reference image type.  This value will be referred to\n                // for any size record that does not specific a type.\n                defaultType: null,\n\n                defaultQuality: 80,\n\n                failureText: \"Failed to scale\",\n\n                includeExif: false,\n\n                // metadata about each requested scaled version\n                sizes: []\n            },\n\n            workarounds: {\n                iosEmptyVideos: true,\n                ios8SafariUploads: true,\n                ios8BrowserCrash: false\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(this._options, o, true);\n\n        this._buttons = [];\n        this._extraButtonSpecs = {};\n        this._buttonIdsForFileIds = [];\n\n        this._wrapCallbacks();\n        this._disposeSupport =  new qq.DisposeSupport();\n\n        this._storedIds = [];\n        this._autoRetries = [];\n        this._retryTimeouts = [];\n        this._preventRetries = [];\n        this._thumbnailUrls = [];\n\n        this._netUploadedOrQueued = 0;\n        this._netUploaded = 0;\n        this._uploadData = this._createUploadDataTracker();\n\n        this._initFormSupportAndParams();\n\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\n\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\n\n        this._endpointStore = this._createStore(this._options.request.endpoint);\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\n\n        this._handler = this._createUploadHandler();\n\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\n\n        if (this._options.button) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._options.button,\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._generateExtraButtonSpecs();\n\n        this._handleCameraAccess();\n\n        if (this._options.paste.targetElement) {\n            if (qq.PasteSupport) {\n                this._pasteHandler = this._createPasteHandler();\n            }\n            else {\n                this.log(\"Paste support module not found\", \"error\");\n            }\n        }\n\n        this._options.warnBeforeUnload && this._preventLeaveInProgress();\n\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\n        this._refreshSessionData();\n\n        this._succeededSinceLastAllComplete = [];\n        this._failedSinceLastAllComplete = [];\n\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\n        if (this._scaler.enabled) {\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\n        }\n\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\n            this._totalProgress = new qq.TotalProgress(\n                qq.bind(this._onTotalProgress, this),\n\n                function(id) {\n                    var entry = self._uploadData.retrieve({id: id});\n                    return (entry && entry.size) || 0;\n                }\n            );\n        }\n\n        this._currentItemLimit = this._options.validation.itemLimit;\n\n        this._customResumeDataStore = this._createStore();\n    };\n\n    // Define the private & public API methods.\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\n}());\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Base upload handler module.  Controls more specific handlers.\n *\n * @param o Options.  Passed along to the specific handler submodule as well.\n * @param namespace [optional] Namespace for the specific handler.\n */\nqq.UploadHandlerController = function(o, namespace) {\n    \"use strict\";\n\n    var controller = this,\n        chunkingPossible = false,\n        concurrentChunkingPossible = false,\n        chunking, preventRetryResponse, log, handler,\n\n    options = {\n        paramsStore: {},\n        maxConnections: 3, // maximum number of concurrent uploads\n        chunking: {\n            enabled: false,\n            multiple: {\n                enabled: false\n            }\n        },\n        log: function(str, level) {},\n        onProgress: function(id, fileName, loaded, total) {},\n        onComplete: function(id, fileName, response, xhr) {},\n        onCancel: function(id, fileName) {},\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\n        onUpload: function(id, fileName) {},\n        onUploadChunk: function(id, fileName, chunkData) {},\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\n        onAutoRetry: function(id, fileName, response, xhr) {},\n        onResume: function(id, fileName, chunkData, customResumeData) {},\n        onUuidChanged: function(id, newUuid) {},\n        getName: function(id) {},\n        setSize: function(id, newSize) {},\n        isQueued: function(id) {},\n        getIdsInProxyGroup: function(id) {},\n        getIdsInBatch: function(id) {},\n        isInProgress: function(id) {}\n    },\n\n    chunked = {\n        // Called when each chunk has uploaded successfully\n        done: function(id, chunkIdx, response, xhr) {\n            var chunkData = handler._getChunkData(id, chunkIdx);\n\n            handler._getFileState(id).attemptingResume = false;\n\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\n            handler._getFileState(id).loaded += chunkData.size;\n\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\n        },\n\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\n        // logic associated with closing out the file, such as combining the chunks.\n        finalize: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id);\n\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\n            handler.finalizeChunks(id).then(\n                function(response, xhr) {\n                    log(\"Finalize successful for \" + id);\n\n                    var normaizedResponse = upload.normalizeResponse(response, true);\n\n                    options.onProgress(id, name, size, size);\n                    handler._maybeDeletePersistedChunkData(id);\n                    upload.cleanup(id, normaizedResponse, xhr);\n                },\n                function(response, xhr) {\n                    var normalizedResponse = upload.normalizeResponse(response, false);\n\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normalizedResponse.error, \"error\");\n\n                    if (\n                        normalizedResponse.reset ||\n                        (xhr && options.chunking.success.resetOnStatus.indexOf(xhr.status) >= 0)\n                    ) {\n                        chunked.reset(id);\n                    }\n\n                    if (!options.onAutoRetry(id, name, normalizedResponse, xhr)) {\n                        upload.cleanup(id, normalizedResponse, xhr);\n                    }\n                }\n            );\n        },\n\n        handleFailure: function(chunkIdx, id, response, xhr) {\n            var name = options.getName(id);\n\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\n\n            handler.clearCachedChunk(id, chunkIdx);\n\n            var responseToReport = upload.normalizeResponse(response, false),\n                inProgressIdx;\n\n            if (responseToReport.reset) {\n                chunked.reset(id);\n            }\n            else {\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\n                if (inProgressIdx >= 0) {\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\n                }\n            }\n\n            // We may have aborted all other in-progress chunks for this file due to a failure.\n            // If so, ignore the failures associated with those aborts.\n            if (!handler._getFileState(id).temp.ignoreFailure) {\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\n                // chunks since they will be explicitly aborted\n                if (concurrentChunkingPossible) {\n                    handler._getFileState(id).temp.ignoreFailure = true;\n\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\n                        ckXhr.abort();\n                        // Flag the transport, in case we are waiting for some other async operation\n                        // to complete before attempting to upload the chunk\n                        ckXhr._cancelled = true;\n                    });\n\n                    // We must indicate that all aborted chunks are no longer in progress\n                    handler.moveInProgressToRemaining(id);\n\n                    // Free up any connections used by these chunks, but don't allow any\n                    // other files to take up the connections (until we have exhausted all auto-retries)\n                    connectionManager.free(id, true);\n                }\n\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\n                    // is a failure or not.\n                    upload.cleanup(id, responseToReport, xhr);\n                }\n            }\n        },\n\n        hasMoreParts: function(id) {\n            return !!handler._getFileState(id).chunking.remaining.length;\n        },\n\n        nextPart: function(id) {\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\n\n            if (nextIdx >= handler._getTotalChunks(id)) {\n                nextIdx = null;\n            }\n\n            return nextIdx;\n        },\n\n        reset: function(id) {\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\n\n            handler._maybeDeletePersistedChunkData(id);\n            handler.reevaluateChunking(id);\n            handler._getFileState(id).loaded = 0;\n            handler._getFileState(id).attemptingResume = false;\n        },\n\n        sendNext: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id),\n                chunkIdx = chunked.nextPart(id),\n                chunkData = handler._getChunkData(id, chunkIdx),\n                fileState = handler._getFileState(id),\n                resuming = fileState.attemptingResume,\n                inProgressChunks = fileState.chunking.inProgress || [];\n\n            if (fileState.loaded == null) {\n                fileState.loaded = 0;\n            }\n\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\n            if (resuming && options.onResume(id, name, chunkData, fileState.customResumeData) === false) {\n                chunked.reset(id);\n                chunkIdx = chunked.nextPart(id);\n                chunkData = handler._getChunkData(id, chunkIdx);\n                resuming = false;\n            }\n\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\n            if (chunkIdx == null && inProgressChunks.length === 0) {\n                chunked.finalize(id);\n            }\n\n            // Send the next chunk\n            else {\n                inProgressChunks.push(chunkIdx);\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\n\n                if (concurrentChunkingPossible) {\n                    connectionManager.open(id, chunkIdx);\n                }\n\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\n                    chunked.sendNext(id);\n                }\n\n                if (chunkData.blob.size === 0) {\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\n                }\n\n                var onUploadChunkPromise = options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\n\n                onUploadChunkPromise.then(\n                    function(requestOverrides) {\n                        if (!options.isInProgress(id)) {\n                            log(qq.format(\"Not sending chunked upload request for item {}.{} - no longer in progress.\", id, chunkIdx));\n                        }\n                        else {\n                            log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\n\n                            var uploadChunkData = {\n                                chunkIdx: chunkIdx,\n                                id: id,\n                                overrides: requestOverrides,\n                                resuming: resuming\n                            };\n\n                            handler.uploadChunk(uploadChunkData).then(\n                                // upload chunk success\n                                function success(response, xhr) {\n                                    log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\n\n                                    handler.clearCachedChunk(id, chunkIdx);\n\n                                    var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\n                                        responseToReport = upload.normalizeResponse(response, true),\n                                        inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\n\n                                    log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\n\n                                    chunked.done(id, chunkIdx, responseToReport, xhr);\n\n                                    if (inProgressChunkIdx >= 0) {\n                                        inProgressChunks.splice(inProgressChunkIdx, 1);\n                                    }\n\n                                    handler._maybePersistChunkedState(id);\n\n                                    if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\n                                        chunked.finalize(id);\n                                    }\n                                    else if (chunked.hasMoreParts(id)) {\n                                        chunked.sendNext(id);\n                                    }\n                                    else {\n                                        log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\n                                    }\n                                },\n\n                                // upload chunk failure\n                                function failure(response, xhr) {\n                                    chunked.handleFailure(chunkIdx, id, response, xhr);\n                                }\n                            )\n                                .done(function () {\n                                    handler.clearXhr(id, chunkIdx);\n                                });\n                        }\n                    },\n\n                    function(error) {\n                        chunked.handleFailure(chunkIdx, id, error, null);\n                    }\n                );\n            }\n        }\n    },\n\n    connectionManager = {\n        _open: [],\n        _openChunks: {},\n        _waiting: [],\n\n        available: function() {\n            var max = options.maxConnections,\n                openChunkEntriesCount = 0,\n                openChunksCount = 0;\n\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\n                openChunkEntriesCount++;\n                openChunksCount += openChunkIndexes.length;\n            });\n\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\n        },\n\n        /**\n         * Removes element from queue, starts upload of next\n         */\n        free: function(id, dontAllowNext) {\n            var allowNext = !dontAllowNext,\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\n                nextId;\n\n            delete connectionManager._openChunks[id];\n\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\n                delete handler._getFileState(id).file;\n            }\n\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\n            if (waitingIndex >= 0) {\n                connectionManager._waiting.splice(waitingIndex, 1);\n            }\n            // If this file was consuming a connection, allow the next file to be uploaded\n            else if (allowNext && connectionsIndex >= 0) {\n                connectionManager._open.splice(connectionsIndex, 1);\n\n                nextId = connectionManager._waiting.shift();\n                if (nextId >= 0) {\n                    connectionManager._open.push(nextId);\n                    upload.start(nextId);\n                }\n            }\n        },\n\n        getWaitingOrConnected: function() {\n            var waitingOrConnected = [];\n\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\n                if (chunks && chunks.length) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // For non-chunked files, only one connection will be consumed per file.\n            // This is where we aggregate those file IDs.\n            qq.each(connectionManager._open, function(idx, fileId) {\n                if (!connectionManager._openChunks[fileId]) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // There may be files waiting for a connection.\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\n\n            return waitingOrConnected;\n        },\n\n        isUsingConnection: function(id) {\n            return qq.indexOf(connectionManager._open, id) >= 0;\n        },\n\n        open: function(id, chunkIdx) {\n            if (chunkIdx == null) {\n                connectionManager._waiting.push(id);\n            }\n\n            if (connectionManager.available()) {\n                if (chunkIdx == null) {\n                    connectionManager._waiting.pop();\n                    connectionManager._open.push(id);\n                }\n                else {\n                    (function() {\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\n                        openChunksEntry.push(chunkIdx);\n                        connectionManager._openChunks[id] = openChunksEntry;\n                    }());\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            connectionManager._waiting = [];\n            connectionManager._open = [];\n        }\n    },\n\n    simple = {\n        send: function(id, name) {\n            handler._getFileState(id).loaded = 0;\n\n            log(\"Sending simple upload request for \" + id);\n            handler.uploadFile(id).then(\n                function(response, optXhr) {\n                    log(\"Simple upload request succeeded for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, true),\n                        size = options.getSize(id);\n\n                    options.onProgress(id, name, size, size);\n                    upload.maybeNewUuid(id, responseToReport);\n                    upload.cleanup(id, responseToReport, optXhr);\n                },\n\n                function(response, optXhr) {\n                    log(\"Simple upload request failed for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, false);\n\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\n                        upload.cleanup(id, responseToReport, optXhr);\n                    }\n                }\n            );\n        }\n    },\n\n    upload = {\n        cancel: function(id) {\n            log(\"Cancelling \" + id);\n            options.paramsStore.remove(id);\n            connectionManager.free(id);\n        },\n\n        cleanup: function(id, response, optXhr) {\n            var name = options.getName(id);\n\n            options.onComplete(id, name, response, optXhr);\n\n            if (handler._getFileState(id)) {\n                handler._clearXhrs && handler._clearXhrs(id);\n            }\n\n            connectionManager.free(id);\n        },\n\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\n        // if none of these are available for the ID\n        getProxyOrBlob: function(id) {\n            return (handler.getProxy && handler.getProxy(id)) ||\n                (handler.getFile && handler.getFile(id));\n        },\n\n        initHandler: function() {\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\n\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\n                options,\n                {\n                    getCustomResumeData: options.getCustomResumeData,\n                    getDataByUuid: options.getDataByUuid,\n                    getName: options.getName,\n                    getSize: options.getSize,\n                    getUuid: options.getUuid,\n                    log: log,\n                    onCancel: options.onCancel,\n                    onProgress: options.onProgress,\n                    onUuidChanged: options.onUuidChanged\n                }\n            );\n\n            if (handler._removeExpiredChunkingRecords) {\n                handler._removeExpiredChunkingRecords();\n            }\n        },\n\n        isDeferredEligibleForUpload: function(id) {\n            return options.isQueued(id);\n        },\n\n        // For Blobs that are part of a group of generated images, along with a reference image,\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\n        // even if some async processing must be completed on one or more Blobs first.\n        maybeDefer: function(id, blob) {\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\n            // and then submit the upload to the specific handler once the blob is available.\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\n\n                // Blob creation may take some time, so the caller may want to update the\n                // UI to indicate that an operation is in progress, even before the actual\n                // upload begins and an onUpload callback is invoked.\n                options.onUploadPrep(id);\n\n                log(\"Attempting to generate a blob on-demand for \" + id);\n                blob.create().then(function(generatedBlob) {\n                    log(\"Generated an on-demand blob for \" + id);\n\n                    // Update record associated with this file by providing the generated Blob\n                    handler.updateBlob(id, generatedBlob);\n\n                    // Propagate the size for this generated Blob\n                    options.setSize(id, generatedBlob.size);\n\n                    // Order handler to recalculate chunking possibility, if applicable\n                    handler.reevaluateChunking(id);\n\n                    upload.maybeSendDeferredFiles(id);\n                },\n\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\n                function(errorMessage) {\n                    var errorResponse = {};\n\n                    if (errorMessage) {\n                        errorResponse.error = errorMessage;\n                    }\n\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\n\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\n                    upload.maybeSendDeferredFiles(id);\n                    connectionManager.free(id);\n                });\n            }\n            else {\n                return upload.maybeSendDeferredFiles(id);\n            }\n\n            return false;\n        },\n\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\n        maybeSendDeferredFiles: function(id) {\n            var idsInGroup = options.getIdsInProxyGroup(id),\n                uploadedThisId = false;\n\n            if (idsInGroup && idsInGroup.length) {\n                log(\"Maybe ready to upload proxy group file \" + id);\n\n                qq.each(idsInGroup, function(idx, idInGroup) {\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\n                        uploadedThisId = idInGroup === id;\n                        upload.now(idInGroup);\n                    }\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\n                        return false;\n                    }\n                });\n            }\n            else {\n                uploadedThisId = true;\n                upload.now(id);\n            }\n\n            return uploadedThisId;\n        },\n\n        maybeNewUuid: function(id, response) {\n            if (response.newUuid !== undefined) {\n                options.onUuidChanged(id, response.newUuid);\n            }\n        },\n\n        // The response coming from handler implementations may be in various formats.\n        // Instead of hoping a promise nested 5 levels deep will always return an object\n        // as its first param, let's just normalize the response here.\n        normalizeResponse: function(originalResponse, successful) {\n            var response = originalResponse;\n\n            // The passed \"response\" param may not be a response at all.\n            // It could be a string, detailing the error, for example.\n            if (!qq.isObject(originalResponse)) {\n                response = {};\n\n                if (qq.isString(originalResponse) && !successful) {\n                    response.error = originalResponse;\n                }\n            }\n\n            response.success = successful;\n\n            return response;\n        },\n\n        now: function(id) {\n            var name = options.getName(id);\n\n            if (!controller.isValid(id)) {\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\n            }\n\n            options.onUpload(id, name).then(\n                function(response) {\n                    if (response && response.pause) {\n                        options.setStatus(id, qq.status.PAUSED);\n                        handler.pause(id);\n                        connectionManager.free(id);\n                    }\n                    else {\n                        if (chunkingPossible && handler._shouldChunkThisFile(id)) {\n                            chunked.sendNext(id);\n                        }\n                        else {\n                            simple.send(id, name);\n                        }\n                    }\n                },\n\n                function(error) {\n                    error = error || {};\n\n                    log(id + \" upload start aborted due to rejected onUpload Promise - details: \" + error, \"error\");\n\n                    if (!options.onAutoRetry(id, name, error.responseJSON || {})) {\n                        var response = upload.normalizeResponse(error.responseJSON, false);\n                        upload.cleanup(id, response);\n                    }\n                }\n            );\n        },\n\n        start: function(id) {\n            var blobToUpload = upload.getProxyOrBlob(id);\n\n            if (blobToUpload) {\n                return upload.maybeDefer(id, blobToUpload);\n            }\n            else {\n                upload.now(id);\n                return true;\n            }\n        }\n    };\n\n    qq.extend(this, {\n        /**\n         * Adds file or file input to the queue\n         **/\n        add: function(id, file) {\n            handler.add.apply(this, arguments);\n        },\n\n        /**\n         * Sends the file identified by id\n         */\n        upload: function(id) {\n            if (connectionManager.open(id)) {\n                return upload.start(id);\n            }\n            return false;\n        },\n\n        retry: function(id) {\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\n            // any more failures at this point.\n            if (concurrentChunkingPossible) {\n                handler._getFileState(id).temp.ignoreFailure = false;\n            }\n\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\n            // Just go ahead and ask the handler to upload again.\n            if (connectionManager.isUsingConnection(id)) {\n                return upload.start(id);\n            }\n\n            // If we are attempting to retry a file that is not currently consuming a connection,\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\n            // before the retry commences.\n            else {\n                return controller.upload(id);\n            }\n        },\n\n        /**\n         * Cancels file upload by id\n         */\n        cancel: function(id) {\n            var cancelRetVal = handler.cancel(id);\n\n            if (qq.isGenericPromise(cancelRetVal)) {\n                cancelRetVal.then(function() {\n                    upload.cancel(id);\n                });\n            }\n            else if (cancelRetVal !== false) {\n                upload.cancel(id);\n            }\n        },\n\n        /**\n         * Cancels all queued or in-progress uploads\n         */\n        cancelAll: function() {\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\n                i;\n\n            // ensure files are cancelled in reverse order which they were added\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\n            if (waitingOrConnected.length) {\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\n                    controller.cancel(waitingOrConnected[i]);\n                }\n            }\n\n            connectionManager.reset();\n        },\n\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\n        // Undefined if no file record is available.\n        getFile: function(id) {\n            if (handler.getProxy && handler.getProxy(id)) {\n                return handler.getProxy(id).referenceBlob;\n            }\n\n            return handler.getFile && handler.getFile(id);\n        },\n\n        // Returns true if the Blob associated with the ID is related to a proxy s\n        isProxied: function(id) {\n            return !!(handler.getProxy && handler.getProxy(id));\n        },\n\n        getInput: function(id) {\n            if (handler.getInput) {\n                return handler.getInput(id);\n            }\n        },\n\n        reset: function() {\n            log(\"Resetting upload handler\");\n            controller.cancelAll();\n            connectionManager.reset();\n            handler.reset();\n        },\n\n        expunge: function(id) {\n            if (controller.isValid(id)) {\n                return handler.expunge(id);\n            }\n        },\n\n        /**\n         * Determine if the file exists.\n         */\n        isValid: function(id) {\n            return handler.isValid(id);\n        },\n\n        hasResumeRecord: function(id) {\n            var key = handler.isValid(id) &&\n                handler._getLocalStorageId &&\n                handler._getLocalStorageId(id);\n\n            if (key) {\n                return !!localStorage.getItem(key);\n            }\n\n            return false;\n        },\n\n        getResumableFilesData: function() {\n            if (handler.getResumableFilesData) {\n                return handler.getResumableFilesData();\n            }\n            return [];\n        },\n\n        /**\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\n         * will be undefined.\n         *\n         * @param id Internal file ID\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\n         */\n        getThirdPartyFileId: function(id) {\n            if (controller.isValid(id)) {\n                return handler.getThirdPartyFileId(id);\n            }\n        },\n\n        /**\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\n         * @param id ID of the upload/file to pause\n         * @returns {boolean} true if the upload was paused\n         */\n        pause: function(id) {\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\n                connectionManager.free(id);\n                handler.moveInProgressToRemaining(id);\n                return true;\n            }\n            return false;\n        },\n\n        isAttemptingResume: function(id) {\n            return !!handler.isAttemptingResume && handler.isAttemptingResume(id);\n        },\n\n        // True if the file is eligible for pause/resume.\n        isResumable: function(id) {\n            return !!handler.isResumable && handler.isResumable(id);\n        }\n    });\n\n    qq.extend(options, o);\n    log = options.log;\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\n\n    preventRetryResponse = (function() {\n        var response = {};\n\n        response[options.preventRetryParam] = true;\n\n        return response;\n    }());\n\n    upload.initHandler();\n};\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        getChunkSize = function(id) {\n            var fileState = handler._getFileState(id);\n\n            if (fileState.chunkSize) {\n                return fileState.chunkSize;\n            }\n\n            else {\n                var chunkSize = chunking.partSize;\n\n                if (qq.isFunction(chunkSize)) {\n                    chunkSize = chunkSize(id, getSize(id));\n                }\n\n                fileState.chunkSize = chunkSize;\n                return chunkSize;\n            }\n        },\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log,\n        getCustomResumeData = proxy.getCustomResumeData;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                if (uploadData.customResumeData) {\n                    data.customResumeData = uploadData.customResumeData;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isAttemptingResume: function(id) {\n            return handler._getFileState(id).attemptingResume;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) &&\n                !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var fileState = handler._getFileState(id) || {},\n                chunkingState =  fileState.chunking || {},\n                inProgress = optInProgress || chunkingState.inProgress,\n                remaining = optRemaining || chunkingState.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = getChunkSize(id),\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/FineUploader/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = getChunkSize(id),\n                endpoint = getEndpoint(id),\n                customKeys = resume.customKeys(id),\n                localStorageId = qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n\n            customKeys.forEach(function(key) {\n                localStorageId += \"-\" + key;\n            });\n\n            return localStorageId;\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = getChunkSize(id);\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.customResumeData = persistedData.customResumeData;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                var customResumeData = getCustomResumeData(id);\n\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now(),\n                };\n\n                if (customResumeData) {\n                    persistedData.customResumeData = customResumeData;\n                }\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*globals qq*/\n/**\n * Upload handler used that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to\n * a generic server.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log;\n\n    /**\n     * Returns json object received by iframe from server.\n     */\n    function getIframeContentJson(id, iframe) {\n        /*jshint evil: true*/\n\n        var response, doc, innerHtml;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            log(\"converting iframe's innerHTML to JSON\");\n            log(\"innerHTML = \" + innerHtml);\n            //plain text response may be wrapped in <pre> tag\n            if (innerHtml && innerHtml.match(/^<pre/i)) {\n                innerHtml = doc.body.firstChild.firstChild.nodeValue;\n            }\n\n            response = handler._parseJsonResponse(innerHtml);\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n            response = {success: false};\n        }\n\n        return response;\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var params = options.paramsStore.get(id),\n            method = options.method.toLowerCase() === \"get\" ? \"GET\" : \"POST\",\n            endpoint = options.endpointStore.get(id),\n            name = getName(id);\n\n        params[options.uuidName] = getUuid(id);\n        params[options.filenameParam] = name;\n\n        return handler._initFormForUpload({\n            method: method,\n            endpoint: endpoint,\n            params: params,\n            paramsInBody: options.paramsInBody,\n            targetName: iframe.name\n        });\n    }\n\n    this.uploadFile = function(id) {\n        var input = handler.getInput(id),\n            iframe = handler._createIframe(id),\n            promise = new qq.Promise(),\n            form;\n\n        form = createForm(id, iframe);\n        form.appendChild(input);\n\n        handler._attachLoadEvent(iframe, function(responseFromMessage) {\n            log(\"iframe loaded\");\n\n            var response = responseFromMessage ? responseFromMessage : getIframeContentJson(id, iframe);\n\n            handler._detachLoadEvent(id);\n\n            //we can't remove an iframe if the iframe doesn't belong to the same domain\n            if (!options.cors.expected) {\n                qq(iframe).remove();\n            }\n\n            if (response.success) {\n                promise.success(response);\n            }\n            else {\n                promise.failure(response);\n            }\n        });\n\n        log(\"Sending upload request for \" + id);\n        form.submit();\n        qq(form).remove();\n\n        return promise;\n    };\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: options.cors.expected,\n            inputName: options.inputName\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n};\n","/*globals qq*/\n/**\n * Upload handler used to upload to traditional endpoints.  It depends on File API support, and, therefore,\n * makes use of `XMLHttpRequest` level 2 to upload `File`s and `Blob`s to a generic server.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        multipart = spec.forceMultipart || spec.paramsInBody,\n\n        addChunkingSpecificParams = function(id, params, chunkData) {\n            var size = getSize(id),\n                name = getName(id);\n\n            if (!spec.omitDefaultParams) {\n                params[spec.chunking.paramNames.partIndex] = chunkData.part;\n                params[spec.chunking.paramNames.partByteOffset] = chunkData.start;\n                params[spec.chunking.paramNames.chunkSize] = chunkData.size;\n                params[spec.chunking.paramNames.totalParts] = chunkData.count;\n                params[spec.totalFileSizeName] = size;\n            }\n\n            /**\n             * When a Blob is sent in a multipart request, the filename value in the content-disposition header is either \"blob\"\n             * or an empty string.  So, we will need to include the actual file name as a param in this case.\n             */\n            if (multipart && !spec.omitDefaultParams) {\n                params[spec.filenameParam] = name;\n            }\n        },\n\n        allChunksDoneRequester = new qq.traditional.AllChunksDoneAjaxRequester({\n            cors: spec.cors,\n            endpoint: spec.chunking.success.endpoint,\n            headers: spec.chunking.success.headers,\n            jsonPayload: spec.chunking.success.jsonPayload,\n            log: log,\n            method: spec.chunking.success.method,\n            params: spec.chunking.success.params\n        }),\n\n        createReadyStateChangedHandler = function(id, xhr) {\n            var promise = new qq.Promise();\n\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    var result = onUploadOrChunkComplete(id, xhr);\n\n                    if (result.success) {\n                        promise.success(result.response, xhr);\n                    }\n                    else {\n                        promise.failure(result.response, xhr);\n                    }\n                }\n            };\n\n            return promise;\n        },\n\n        getChunksCompleteParams = function(id) {\n            var params = spec.paramsStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n            params[spec.totalFileSizeName] = size;\n            params[spec.chunking.paramNames.totalParts] = handler._getTotalChunks(id);\n\n            return params;\n        },\n\n        isErrorUploadResponse = function(xhr, response) {\n            return qq.indexOf([200, 201, 202, 203, 204], xhr.status) < 0 ||\n                (spec.requireSuccessJson && !response.success) ||\n                response.reset;\n        },\n\n        onUploadOrChunkComplete = function(id, xhr) {\n            var response;\n\n            log(\"xhr - server response received for \" + id);\n            log(\"responseText = \" + xhr.responseText);\n\n            response = parseResponse(true, xhr);\n\n            return {\n                success: !isErrorUploadResponse(xhr, response),\n                response: response\n            };\n        },\n\n        // If this is an upload response, we require a JSON payload, otherwise, it is optional.\n        parseResponse = function(upload, xhr) {\n            var response = {};\n\n            try {\n                log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\n                response = qq.parseJson(xhr.responseText);\n            }\n            catch (error) {\n                upload && spec.requireSuccessJson && log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        },\n\n        sendChunksCompleteRequest = function(id) {\n            var promise = new qq.Promise();\n\n            allChunksDoneRequester.complete(\n                    id,\n                    handler._createXhr(id),\n                    getChunksCompleteParams(id),\n                    spec.customHeaders.get(id)\n                )\n                .then(function(xhr) {\n                    promise.success(parseResponse(false, xhr), xhr);\n                }, function(xhr) {\n                    promise.failure(parseResponse(false, xhr), xhr);\n                });\n\n            return promise;\n        },\n\n        setParamsAndGetEntityToSend = function(entityToSendParams) {\n            var fileOrBlob = entityToSendParams.fileOrBlob;\n            var id = entityToSendParams.id;\n            var xhr = entityToSendParams.xhr;\n            var xhrOverrides = entityToSendParams.xhrOverrides || {};\n            var customParams = entityToSendParams.customParams || {};\n            var defaultParams = entityToSendParams.params || {};\n            var xhrOverrideParams = xhrOverrides.params || {};\n            var params;\n\n            var formData = multipart ? new FormData() : null,\n                method = xhrOverrides.method || spec.method,\n                endpoint = xhrOverrides.endpoint || spec.endpointStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            if (spec.omitDefaultParams) {\n                params = qq.extend({}, customParams);\n                qq.extend(params, xhrOverrideParams);\n            }\n            else {\n                params = qq.extend({}, customParams);\n                qq.extend(params, xhrOverrideParams);\n                qq.extend(params, defaultParams);\n\n                params[spec.uuidName] = getUuid(id);\n                params[spec.filenameParam] = name;\n\n                if (multipart) {\n                    params[spec.totalFileSizeName] = size;\n                }\n                else if (!spec.paramsInBody) {\n                    params[spec.inputName] = name;\n                }\n            }\n\n            //build query string\n            if (!spec.paramsInBody) {\n                endpoint = qq.obj2url(params, endpoint);\n            }\n\n            xhr.open(method, endpoint, true);\n\n            if (spec.cors.expected && spec.cors.sendCredentials) {\n                xhr.withCredentials = true;\n            }\n\n            if (multipart) {\n                if (spec.paramsInBody) {\n                    qq.obj2FormData(params, formData);\n                }\n\n                formData.append(spec.inputName, fileOrBlob);\n                return formData;\n            }\n\n            return fileOrBlob;\n        },\n\n        setUploadHeaders = function(headersOptions) {\n            var headerOverrides = headersOptions.headerOverrides;\n            var id = headersOptions.id;\n            var xhr = headersOptions.xhr;\n\n            if (headerOverrides) {\n                qq.each(headerOverrides, function(headerName, headerValue) {\n                    xhr.setRequestHeader(headerName, headerValue);\n                });\n            }\n            else {\n                var extraHeaders = spec.customHeaders.get(id),\n                    fileOrBlob = handler.getFile(id);\n\n                xhr.setRequestHeader(\"Accept\", \"application/json\");\n                xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n\n                if (!multipart) {\n                    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n                    //NOTE: return mime type in xhr works on chrome 16.0.9 firefox 11.0a2\n                    xhr.setRequestHeader(\"X-Mime-Type\", fileOrBlob.type);\n                }\n\n                qq.each(extraHeaders, function(name, val) {\n                    xhr.setRequestHeader(name, val);\n                });\n            }\n        };\n\n    qq.extend(this, {\n        uploadChunk: function(uploadChunkParams) {\n            var id = uploadChunkParams.id;\n            var chunkIdx = uploadChunkParams.chunkIdx;\n            var overrides = uploadChunkParams.overrides || {};\n            var resuming = uploadChunkParams.resuming;\n\n            var chunkData = handler._getChunkData(id, chunkIdx),\n                xhr = handler._createXhr(id, chunkIdx),\n                promise, toSend, customParams, params = {};\n\n            promise = createReadyStateChangedHandler(id, xhr);\n            handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n            customParams = spec.paramsStore.get(id);\n            addChunkingSpecificParams(id, params, chunkData);\n\n            if (resuming) {\n                params[spec.resume.paramNames.resuming] = true;\n            }\n\n            toSend = setParamsAndGetEntityToSend({\n                fileOrBlob: chunkData.blob,\n                id: id,\n                customParams: customParams,\n                params: params,\n                xhr: xhr,\n                xhrOverrides: overrides\n            });\n\n            setUploadHeaders({\n                headerOverrides: overrides.headers,\n                id: id,\n                xhr: xhr\n            });\n\n            xhr.send(toSend);\n\n            return promise;\n        },\n\n        uploadFile: function(id) {\n            var fileOrBlob = handler.getFile(id),\n                promise, xhr, customParams, toSend;\n\n            xhr = handler._createXhr(id);\n            handler._registerProgressHandler(id);\n            promise = createReadyStateChangedHandler(id, xhr);\n            customParams = spec.paramsStore.get(id);\n\n            toSend = setParamsAndGetEntityToSend({\n                fileOrBlob: fileOrBlob,\n                id: id,\n                customParams: customParams,\n                xhr: xhr\n            });\n\n            setUploadHeaders({\n                id: id,\n                xhr: xhr\n            });\n\n            xhr.send(toSend);\n\n            return promise;\n        }\n    });\n\n    qq.extend(this, new qq.XhrUploadHandler({\n        options: qq.extend({namespace: \"traditional\"}, spec),\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n    }));\n\n    qq.override(this, function(super_) {\n        return {\n            finalizeChunks: function(id) {\n                if (spec.chunking.success.endpoint) {\n                    return sendChunksCompleteRequest(id);\n                }\n                else {\n                    return super_.finalizeChunks(id, qq.bind(parseResponse, this, true));\n                }\n            }\n        };\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send a POST to a traditional endpoint once all chunks for a specific file have uploaded\n * successfully.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.traditional.AllChunksDoneAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            cors: {\n                allowXdr: false,\n                expected: false,\n                sendCredentials: false\n            },\n            endpoint: null,\n            log: function(str, level) {},\n            method: \"POST\"\n        },\n        promises = {},\n        endpointHandler = {\n            get: function(id) {\n                if (qq.isFunction(options.endpoint)) {\n                    return options.endpoint(id);\n                }\n\n                return options.endpoint;\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        contentType: options.jsonPayload ? \"application/json\" : \"application/x-www-form-urlencoded\",\n        validMethods: [options.method],\n        method: options.method,\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: options.cors,\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete promises[id];\n\n            if (isError) {\n                promise.failure(xhr);\n            }\n            else {\n                promise.success(xhr);\n            }\n        }\n    }));\n\n    qq.extend(this, {\n        complete: function(id, xhr, params, headers) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting All Chunks Done request for \" + id);\n\n            promises[id] = promise;\n\n            requester.initTransport(id)\n                .withParams(options.params(id) || params)\n                .withHeaders(options.headers(id) || headers)\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            if (isFileDrag(e)) {\n                e.preventDefault();\n                maybeHideDropZones();\n            }\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest &&\n                (\n                    (dt.files && dt.files.length) ||                                     // Valid for drop events with files\n                    (!isSafari && dt.types.contains && dt.types.contains(\"Files\")) ||  // Valid in Chrome/Firefox\n                    (dt.types.includes && dt.types.includes(\"Files\"))               // Valid in IE\n                );\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n\n    this._testing = {};\n    this._testing.isValidFileDrag = isValidFileDrag;\n};\n","/*globals qq */\n/**\n * Defines the public API for FineUploader mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.uiPublicApi = {\n        addInitialFiles: function(cannedFileList) {\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\n            this._templating.addCacheToDom();\n        },\n\n        clearStoredFiles: function() {\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\n            this._templating.clearFiles();\n        },\n\n        addExtraDropzone: function(element) {\n            this._dnd && this._dnd.setupExtraDropzone(element);\n        },\n\n        removeExtraDropzone: function(element) {\n            if (this._dnd) {\n                return this._dnd.removeDropzone(element);\n            }\n        },\n\n        getItemByFileId: function(id) {\n            if (!this._templating.isHiddenForever(id)) {\n                return this._templating.getFileContainer(id);\n            }\n        },\n\n        reset: function() {\n            this._parent.prototype.reset.apply(this, arguments);\n            this._templating.reset();\n\n            if (!this._options.button && this._templating.getButton()) {\n                this._defaultButtonId = this._createUploadButton({\n                    element: this._templating.getButton(),\n                    title: this._options.text.fileInputTitle\n                }).getButtonId();\n            }\n\n            if (this._dnd) {\n                this._dnd.dispose();\n                this._dnd = this._setupDragAndDrop();\n            }\n\n            this._totalFilesInBatch = 0;\n            this._filesInBatchAddedToUi = 0;\n\n            this._setupClickAndEditEventHandlers();\n        },\n\n        setName: function(id, newName) {\n            var formattedFilename = this._options.formatFileName(newName);\n\n            this._parent.prototype.setName.apply(this, arguments);\n            this._templating.updateFilename(id, formattedFilename);\n        },\n\n        pauseUpload: function(id) {\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\n\n            paused && this._templating.uploadPaused(id);\n            return paused;\n        },\n\n        continueUpload: function(id) {\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\n\n            continued && this._templating.uploadContinued(id);\n            return continued;\n        },\n\n        getId: function(fileContainerOrChildEl) {\n            return this._templating.getFileId(fileContainerOrChildEl);\n        },\n\n        getDropTarget: function(fileId) {\n            var file = this.getFile(fileId);\n\n            return file.qqDropTarget;\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploader mode.\n     */\n    qq.uiPrivateApi = {\n        _getButton: function(buttonId) {\n            var button = this._parent.prototype._getButton.apply(this, arguments);\n\n            if (!button) {\n                if (buttonId === this._defaultButtonId) {\n                    button = this._templating.getButton();\n                }\n            }\n\n            return button;\n        },\n\n        _removeFileItem: function(fileId) {\n            this._templating.removeFile(fileId);\n        },\n\n        _setupClickAndEditEventHandlers: function() {\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\n\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\n            this._focusinEventSupported = !qq.firefox();\n\n            if (this._isEditFilenameEnabled())\n            {\n                this._filenameClickHandler = this._bindFilenameClickEvent();\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\n            }\n        },\n\n        _setupDragAndDrop: function() {\n            var self = this,\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\n                templating = this._templating,\n                defaultDropZone = templating.getDropZone();\n\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\n\n            return new qq.DragAndDrop({\n                dropZoneElements: dropZoneElements,\n                allowMultipleItems: this._options.multiple,\n                classes: {\n                    dropActive: this._options.classes.dropActive\n                },\n                callbacks: {\n                    processingDroppedFiles: function() {\n                        templating.showDropProcessing();\n                    },\n                    processingDroppedFilesComplete: function(files, targetEl) {\n                        templating.hideDropProcessing();\n\n                        qq.each(files, function(idx, file) {\n                            file.qqDropTarget = targetEl;\n                        });\n\n                        if (files.length) {\n                            self.addFiles(files, null, null);\n                        }\n                    },\n                    dropError: function(code, errorData) {\n                        self._itemError(code, errorData);\n                    },\n                    dropLog: function(message, level) {\n                        self.log(message, level);\n                    }\n                }\n            });\n        },\n\n        _bindFileButtonsClickEvent: function() {\n            var self = this;\n\n            return new qq.FileButtonsClickHandler({\n                templating: this._templating,\n\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n\n                onDeleteFile: function(fileId) {\n                    self.deleteFile(fileId);\n                },\n\n                onCancel: function(fileId) {\n                    self.cancel(fileId);\n                },\n\n                onRetry: function(fileId) {\n                    self.retry(fileId);\n                },\n\n                onPause: function(fileId) {\n                    self.pauseUpload(fileId);\n                },\n\n                onContinue: function(fileId) {\n                    self.continueUpload(fileId);\n                },\n\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                }\n            });\n        },\n\n        _isEditFilenameEnabled: function() {\n            /*jshint -W014 */\n            return this._templating.isEditFilenamePossible()\n                && !this._options.autoUpload\n                && qq.FilenameClickHandler\n                && qq.FilenameInputFocusHandler\n                && qq.FilenameInputFocusHandler;\n        },\n\n        _filenameEditHandler: function() {\n            var self = this,\n                templating = this._templating;\n\n            return {\n                templating: templating,\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n                onGetUploadStatus: function(fileId) {\n                    return self.getUploads({id: fileId}).status;\n                },\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                },\n                onSetName: function(id, newName) {\n                    self.setName(id, newName);\n                },\n                onEditingStatusChange: function(id, isEditing) {\n                    var qqInput = qq(templating.getEditInput(id)),\n                        qqFileContainer = qq(templating.getFileContainer(id));\n\n                    if (isEditing) {\n                        qqInput.addClass(\"qq-editing\");\n                        templating.hideFilename(id);\n                        templating.hideEditIcon(id);\n                    }\n                    else {\n                        qqInput.removeClass(\"qq-editing\");\n                        templating.showFilename(id);\n                        templating.showEditIcon(id);\n                    }\n\n                    // Force IE8 and older to repaint\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\n                }\n            };\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\n\n            if (this._isEditFilenameEnabled()) {\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\n                    this._templating.markFilenameEditable(id);\n                    this._templating.hideEditIcon(id);\n                }\n            }\n\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\n                this._templating.hideRetry(id);\n                this._templating.setStatusText(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\n            }\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\n                this._templating.hidePause(id);\n            }\n        },\n\n        _bindFilenameInputFocusInEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusInHandler(spec);\n        },\n\n        _bindFilenameInputFocusEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusHandler(spec);\n        },\n\n        _bindFilenameClickEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameClickHandler(spec);\n        },\n\n        _storeForLater: function(id) {\n            this._parent.prototype._storeForLater.apply(this, arguments);\n            this._templating.hideSpinner(id);\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._parent.prototype._onAllComplete.apply(this, arguments);\n            this._templating.resetTotalProgress();\n        },\n\n        _onSubmit: function(id, name) {\n            var file = this.getFile(id);\n\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\n                this._paramsStore.addReadOnly(id, {\n                    qqpath: file.qqPath\n                });\n            }\n\n            this._parent.prototype._onSubmit.apply(this, arguments);\n            this._addToList(id, name);\n        },\n\n        // The file item has been added to the DOM.\n        _onSubmitted: function(id) {\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\n            if (this._isEditFilenameEnabled()) {\n                this._templating.markFilenameEditable(id);\n                this._templating.showEditIcon(id);\n\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\n                if (!this._focusinEventSupported) {\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\n                }\n            }\n        },\n\n        // Update the progress bar & percentage as the file is uploaded\n        _onProgress: function(id, name, loaded, total) {\n            this._parent.prototype._onProgress.apply(this, arguments);\n\n            this._templating.updateProgress(id, loaded, total);\n\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\n                this._templating.hideCancel(id);\n                this._templating.hidePause(id);\n                this._templating.hideProgress(id);\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\n\n                // If ~last byte was sent, display total file size\n                this._displayFileSize(id);\n            }\n            else {\n                // If still uploading, display percentage - total size is actually the total request(s) size\n                this._displayFileSize(id, loaded, total);\n            }\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\n            this._templating.updateTotalProgress(loaded, total);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\n                templating = this._templating,\n                fileContainer = templating.getFileContainer(id),\n                self = this;\n\n            function completeUpload(result) {\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\n                // If so, don't perform any UI-related tasks related to this file.\n                if (!fileContainer) {\n                    return;\n                }\n\n                templating.setStatusText(id);\n\n                qq(fileContainer).removeClass(self._classes.retrying);\n                templating.hideProgress(id);\n\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\n                    templating.hideCancel(id);\n                }\n                templating.hideSpinner(id);\n\n                if (result.success) {\n                    self._markFileAsSuccessful(id);\n                }\n                else {\n                    qq(fileContainer).addClass(self._classes.fail);\n                    templating.showCancel(id);\n\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\n                        qq(fileContainer).addClass(self._classes.retryable);\n                        templating.showRetry(id);\n                    }\n                    self._controlFailureTextDisplay(id, result);\n                }\n            }\n\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\n            if (parentRetVal instanceof qq.Promise) {\n                parentRetVal.done(function(newResult) {\n                    completeUpload(newResult);\n                });\n\n            }\n            else {\n                completeUpload(result);\n            }\n\n            return parentRetVal;\n        },\n\n        _markFileAsSuccessful: function(id) {\n            var templating = this._templating;\n\n            if (this._isDeletePossible()) {\n                templating.showDeleteButton(id);\n            }\n\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\n\n            this._maybeUpdateThumbnail(id);\n        },\n\n        _onUploadPrep: function(id) {\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\n            this._templating.showSpinner(id);\n        },\n\n        _onUpload: function(id, name) {\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\n\n            this._templating.showSpinner(id);\n\n            return parentRetVal;\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\n\n            // Only display the pause button if we have finished uploading at least one chunk\n            // & this file can be resumed\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\n                this._templating.allowPause(id);\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._parent.prototype._onCancel.apply(this, arguments);\n            this._removeFileItem(id);\n\n            if (this._getNotFinished() === 0) {\n                this._templating.resetTotalProgress();\n            }\n        },\n\n        _onBeforeAutoRetry: function(id) {\n            var retryNumForDisplay, maxAuto, retryNote;\n\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\n\n            this._showCancelLink(id);\n\n            if (this._options.retry.showAutoRetryNote) {\n                retryNumForDisplay = this._autoRetries[id];\n                maxAuto = this._options.retry.maxAutoAttempts;\n\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\n\n                this._templating.setStatusText(id, retryNote);\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\n            }\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\n                this._templating.resetProgress(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\n                this._templating.setStatusText(id);\n                this._templating.showSpinner(id);\n                this._showCancelLink(id);\n                return true;\n            }\n            else {\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\n                this._templating.showRetry(id);\n                return false;\n            }\n        },\n\n        _onSubmitDelete: function(id) {\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\n\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\n        },\n\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\n            if (this._options.deleteFile.forceConfirm) {\n                this._showDeleteConfirm.apply(this, arguments);\n            }\n            else {\n                this._sendDeleteRequest.apply(this, arguments);\n            }\n        },\n\n        _onDeleteComplete: function(id, xhr, isError) {\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\n\n            this._templating.hideSpinner(id);\n\n            if (isError) {\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\n                this._templating.showDeleteButton(id);\n            }\n            else {\n                this._removeFileItem(id);\n            }\n        },\n\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\n            this._templating.hideDeleteButton(id);\n            this._templating.showSpinner(id);\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\n            this._deleteHandler.sendDelete.apply(this, arguments);\n        },\n\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\n            /*jshint -W004 */\n            var fileName = this.getName(id),\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\n                uuid = this.getUuid(id),\n                deleteRequestArgs = arguments,\n                self = this,\n                retVal;\n\n            retVal = this._options.showConfirm(confirmMessage);\n\n            if (qq.isGenericPromise(retVal)) {\n                retVal.then(function() {\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\n                });\n            }\n            else if (retVal !== false) {\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\n            }\n        },\n\n        _addToList: function(id, name, canned) {\n            var prependData,\n                prependIndex = 0,\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\n                record;\n\n            if (this._options.display.prependFiles) {\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\n                    prependIndex = this._filesInBatchAddedToUi - 1;\n                }\n\n                prependData = {\n                    index: prependIndex\n                };\n            }\n\n            if (!canned) {\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\n                    this._templating.disableCancel();\n                }\n\n                // Cancel all existing (previous) files and clear the list if this file is not part of\n                // a scaled file group that has already been accepted, or if this file is not part of\n                // a scaled file group at all.\n                if (!this._options.multiple) {\n                    record = this.getUploads({id: id});\n\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\n\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\n                        this._handler.cancelAll();\n                        this._clearList();\n                        this._handledProxyGroup = null;\n                    }\n                }\n            }\n\n            if (canned) {\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\n            }\n            else {\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\n            }\n\n            this._filesInBatchAddedToUi += 1;\n\n            if (canned ||\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\n\n                this._displayFileSize(id);\n            }\n        },\n\n        _clearList: function() {\n            this._templating.clearFiles();\n            this.clearStoredFiles();\n        },\n\n        _displayFileSize: function(id, loadedSize, totalSize) {\n            var size = this.getSize(id),\n                sizeForDisplay = this._formatSize(size);\n\n            if (size >= 0) {\n                if (loadedSize !== undefined && totalSize !== undefined) {\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\n                }\n\n                this._templating.updateSize(id, sizeForDisplay);\n            }\n        },\n\n        _formatProgress: function(uploadedSize, totalSize) {\n            var message = this._options.text.formatProgress;\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\n            r(\"{total_size}\", this._formatSize(totalSize));\n            return message;\n        },\n\n        _controlFailureTextDisplay: function(id, response) {\n            var mode, responseProperty, failureReason;\n\n            mode = this._options.failedUploadTextDisplay.mode;\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\n\n            if (mode === \"custom\") {\n                failureReason = response[responseProperty];\n                if (!failureReason) {\n                    failureReason = this._options.text.failUpload;\n                }\n\n                this._templating.setStatusText(id, failureReason);\n\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\n                    this._showTooltip(id, failureReason);\n                }\n            }\n            else if (mode === \"default\") {\n                this._templating.setStatusText(id, this._options.text.failUpload);\n            }\n            else if (mode !== \"none\") {\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\n            }\n        },\n\n        _showTooltip: function(id, text) {\n            this._templating.getFileContainer(id).title = text;\n        },\n\n        _showCancelLink: function(id) {\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\n                this._templating.showCancel(id);\n            }\n        },\n\n        _itemError: function(code, name, item) {\n            var message = this._parent.prototype._itemError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _batchError: function(message) {\n            this._parent.prototype._batchError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _setupPastePrompt: function() {\n            var self = this;\n\n            this._options.callbacks.onPasteReceived = function() {\n                var message = self._options.paste.namePromptMessage,\n                    defaultVal = self._options.paste.defaultName;\n\n                return self._options.showPrompt(message, defaultVal);\n            };\n        },\n\n        _fileOrBlobRejected: function(id, name) {\n            this._totalFilesInBatch -= 1;\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            this._totalFilesInBatch = items.length;\n            this._filesInBatchAddedToUi = 0;\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\n        },\n\n        _maybeUpdateThumbnail: function(fileId) {\n            var thumbnailUrl = this._thumbnailUrls[fileId],\n                fileStatus = this.getUploads({id: fileId}).status;\n\n            if (fileStatus !== qq.status.DELETED &&\n                (thumbnailUrl ||\n                this._options.thumbnails.placeholders.waitUntilResponse ||\n                !qq.supportedFeatures.imagePreviews)) {\n\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\n                // if called with a null thumbnailUrl.\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\n\n            this._addToList(id, this.getName(id), true);\n            this._templating.hideSpinner(id);\n            this._templating.hideCancel(id);\n            this._markFileAsSuccessful(id);\n\n            return id;\n        },\n\n        _setSize: function(id, newSize) {\n            this._parent.prototype._setSize.apply(this, arguments);\n\n            this._templating.updateSize(id, this._formatSize(newSize));\n        },\n\n        _sessionRequestComplete: function() {\n            this._templating.addCacheToDom();\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateDom,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListEl,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListEl = fileListNode.children[0].cloneNode(true);\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: tempTemplateEl,\n                fileTemplate: fileListEl\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateDom = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.appendChild(templateDom.template.cloneNode(true));\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = templateDom.fileTemplate.cloneNode(true),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n"]}